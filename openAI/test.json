{"prompt": "diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index a8aaa5a..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -545,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([len(a:body), winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 ", "completion": "Extract function to calculate screen lines and cols See #846. "}
{"prompt": "diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 5df5dcf..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -503,26 +503,13 @@ endfunction function! s:populate_hunk_preview_window(header, body) if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - \" calculate width of 'content' area - let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] - let cursor = getcurpos() - normal! g$ - let available_width = virtcol('.') - call setpos('.', cursor) - let &virtualedit=_virtualedit - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = min([max(map(copy(a:body), 'strdisplaywidth(v:val)')), available_width]) - if exists('*reduce') - let body_length = reduce(a:body, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) - else - let body_length = eval(join(map(copy(a:body), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) - endif - let height = min([body_length, g:gitgutter_floating_window_options.height]) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -558,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([len(a:body), winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -575,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! ", "completion": "Make height of floating preview window wrap-aware Fixes #846. "}
{"prompt": "diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! ", "completion": "Fix patch strings to use conventional format See #841. "}
{"prompt": "diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! ", "completion": "Ensure older vims process buffer at startup In this context older vims are those without timer_start() and lambda. The plugin always used to process the buffer at startup. Then in #734 an optimisation was introduced to defer processing at startup, to keep vim's startup fast. However in this optimisation older vim's unintentionally lost their startup processing altogether. "}
{"prompt": "diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 81dcc9c..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -247,6 +247,8 @@ function! s:on_bufenter() if has('vim_starting') && !$VIM_GITGUTTER_TEST if exists('*timer_start') && has('lambda') call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif ", "completion": "Use timer instead of autocmd to defer startup processing If the user has removed the \"gitgutter CursorHold\" autocommand, which is the documented way to turn off automatic refreshing, calling the autocommand at start up will fail. Use a timer instead. This implementation also changes the processing delay to 1ms instead of 'updatetime'. See #840. "}
{"prompt": "diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction ", "completion": "Fix comparison to be case sensitive Closes #836. "}
{"prompt": "diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index 536e52e..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -162,7 +162,7 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction ", "completion": "Set filetype in :GitGutterDiffOrig Closes #833. "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index 536e52e..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -162,7 +162,7 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction ", "completion": "Use a reliable regexp operator for lower case It turns out =~ depends on 'ignorecase'. Big sigh. "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index 536e52e..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -162,7 +162,7 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index 6193584..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -120,7 +120,7 @@ let s:set_path_handler = {} function! s:set_path_handler.out(buffer, listing) abort let listing = s:strip_trailing_new_line(a:listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[a-z]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:buffer, 'path', -3) else call gitgutter#utility#setbufvar(a:buffer, 'path', path) @@ -170,7 +170,7 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort let listing = s:strip_trailing_new_line(listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[a-z]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else call gitgutter#utility#setbufvar(a:bufnr, 'path', path) diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction ", "completion": "Use reliable regexp character class for lower case It turns out [:lower:] does not always mean lower case (it depends on 'ignorecase'). Sigh. "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index 536e52e..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -162,7 +162,7 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 8d3074c..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -501,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -548,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -565,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index a2aa64e..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -120,7 +120,7 @@ let s:set_path_handler = {} function! s:set_path_handler.out(buffer, listing) abort let listing = s:strip_trailing_new_line(a:listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[[:lower:]]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:buffer, 'path', -3) else call gitgutter#utility#setbufvar(a:buffer, 'path', path) @@ -170,7 +170,7 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort let listing = s:strip_trailing_new_line(listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[[:lower:]]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else call gitgutter#utility#setbufvar(a:bufnr, 'path', path) diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction ", "completion": "Improve testing of private functions "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index ec21b44..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -150,12 +150,6 @@ function! s:lcs(s1, s2) return a:s1[endindex - maxlength + 1 : endindex] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#lcs(s1, s2) - return s:lcs(a:s1, a:s2) - endfunction -endif - \" Returns 0-based index of last character of common prefix \" If there is no common prefix, returns -1. @@ -168,19 +162,13 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor return i endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_prefix(a, b) - return s:common_prefix(a:a, a:b) - endfunction -endif - \" Returns 0-based indices of start of common suffix \" @@ -199,12 +187,6 @@ function! s:common_suffix(a, b, start) return [sa+1, sb+1] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_suffix(a, b, start) - return s:common_suffix(a:a, a:b, a:start) - endfunction -endif - \" Split a string on another string. \" Assumes 1 occurrence of the delimiter. @@ -217,9 +199,3 @@ function! s:split(str, delimiter) return [a:str[:i-1], a:str[i+len(a:delimiter):]] endfunction - -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#split(str, delimiter) - return s:split(a:str, a:delimiter) - endfunction -endif diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 349b7ca..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -382,12 +382,6 @@ function! s:fix_file_references(filepath, hunk_diff) return join(lines, \"n\").\"n\" endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#hunk#fix_file_references(filepath, hunk_diff) - return s:fix_file_references(a:filepath, a:hunk_diff) - endfunction -endif - function! s:adjust_hunk_summary(hunk_diff) abort let line_adjustment = s:line_adjustment_for_current_hunk() @@ -507,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -554,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -571,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index a2aa64e..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -120,7 +120,7 @@ let s:set_path_handler = {} function! s:set_path_handler.out(buffer, listing) abort let listing = s:strip_trailing_new_line(a:listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[[:lower:]]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:buffer, 'path', -3) else call gitgutter#utility#setbufvar(a:buffer, 'path', path) @@ -170,7 +170,7 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort let listing = s:strip_trailing_new_line(listing) let [status, path] = [listing[0], listing[2:]] - if status =~ '[[:lower:]]' + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else call gitgutter#utility#setbufvar(a:bufnr, 'path', path) diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction diff --git a/test/test_gitgutter.vim b/test/test_gitgutter.vim index 412b15f..df527b8 100644 --- a/test/test_gitgutter.vim +++ b/test/test_gitgutter.vim @@ -849,6 +849,9 @@ endfunction function Test_fix_file_references() + let sid = matchstr(execute('filter autoload/gitgutter/hunk.vim scriptnames'), 'd+') + let FixFileReferences = function(\"<SNR>\".sid.\"_fix_file_references\") + \" No special characters let hunk_diff = join([ 'diff --git a/fixture.txt b/fixture.txt', @@ -869,7 +872,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" diff.mnemonicPrefix; spaces in filename let hunk_diff = join([ @@ -891,7 +894,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" Backslashes in filename; quotation marks let hunk_diff = join([ @@ -913,7 +916,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) endfunction @@ -989,39 +992,45 @@ endfunction function Test_common_prefix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonPrefix = function(\"<SNR>\".sid.\"_common_prefix\") + \" zero length - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('', 'foo')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('foo', '')) + call assert_equal(-1, CommonPrefix('', 'foo')) + call assert_equal(-1, CommonPrefix('foo', '')) \" nothing in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+pqrst')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('abcde', 'pqrst')) + call assert_equal(-1, CommonPrefix('-abcde', '+pqrst')) + call assert_equal(-1, CommonPrefix('abcde', 'pqrst')) \" something in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcpq')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abcpq')) - call assert_equal(0, gitgutter#diff_highlight#common_prefix('abc', 'apq')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcpq')) + call assert_equal(2, CommonPrefix('abcde', 'abcpq')) + call assert_equal(0, CommonPrefix('abc', 'apq')) \" everything in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcde')) - call assert_equal(4, gitgutter#diff_highlight#common_prefix('abcde', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcde')) + call assert_equal(4, CommonPrefix('abcde', 'abcde')) \" different lengths - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abx')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abcde', 'abx')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abx', '+abcde')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abx', 'abcde')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abc')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abc')) + call assert_equal(-1, CommonPrefix('-abcde', '+abx')) + call assert_equal(1, CommonPrefix('abcde', 'abx')) + call assert_equal(-1, CommonPrefix('-abx', '+abcde')) + call assert_equal(1, CommonPrefix('abx', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abc')) + call assert_equal(2, CommonPrefix('abcde', 'abc')) endfunction function Test_common_suffix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonSuffix = function(\"<SNR>\".sid.\"_common_suffix\") + \" nothing in common - call assert_equal([6,6], gitgutter#diff_highlight#common_suffix('-abcde', '+pqrst', 0)) + call assert_equal([6,6], CommonSuffix('-abcde', '+pqrst', 0)) \" something in common - call assert_equal([3,3], gitgutter#diff_highlight#common_suffix('-abcde', '+pqcde', 0)) + call assert_equal([3,3], CommonSuffix('-abcde', '+pqcde', 0)) \" everything in common - call assert_equal([5,5], gitgutter#diff_highlight#common_suffix('-abcde', '+abcde', 5)) + call assert_equal([5,5], CommonSuffix('-abcde', '+abcde', 5)) \" different lengths - call assert_equal([4,2], gitgutter#diff_highlight#common_suffix('-abcde', '+xde', 0)) - call assert_equal([2,4], gitgutter#diff_highlight#common_suffix('-xde', '+abcde', 0)) + call assert_equal([4,2], CommonSuffix('-abcde', '+xde', 0)) + call assert_equal([2,4], CommonSuffix('-xde', '+abcde', 0)) endfunction @@ -1110,18 +1119,24 @@ endfunction function Test_lcs() - call assert_equal('', gitgutter#diff_highlight#lcs('', 'foo')) - call assert_equal('', gitgutter#diff_highlight#lcs('foo', '')) - call assert_equal('bar', gitgutter#diff_highlight#lcs('foobarbaz', 'bbart')) - call assert_equal('transaction', gitgutter#diff_highlight#lcs('transaction.unexplained_amount', 'amount(transaction)')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Lcs = function(\"<SNR>\".sid.\"_lcs\") + + call assert_equal('', Lcs('', 'foo')) + call assert_equal('', Lcs('foo', '')) + call assert_equal('bar', Lcs('foobarbaz', 'bbart')) + call assert_equal('transaction', Lcs('transaction.unexplained_amount', 'amount(transaction)')) endfunction function Test_split() - call assert_equal(['foo', 'baz'], gitgutter#diff_highlight#split('foobarbaz', 'bar')) - call assert_equal(['', 'barbaz'], gitgutter#diff_highlight#split('foobarbaz', 'foo')) - call assert_equal(['foobar', ''], gitgutter#diff_highlight#split('foobarbaz', 'baz')) - call assert_equal(['1', '2'], gitgutter#diff_highlight#split('1~2', '~')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Split = function(\"<SNR>\".sid.\"_split\") + + call assert_equal(['foo', 'baz'], Split('foobarbaz', 'bar')) + call assert_equal(['', 'barbaz'], Split('foobarbaz', 'foo')) + call assert_equal(['foobar', ''], Split('foobarbaz', 'baz')) + call assert_equal(['1', '2'], Split('1~2', '~')) endfunction ", "completion": "Fix parsing of 'git ls-files -v' for filenames with spaces Fixes #829. "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index ec21b44..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -150,12 +150,6 @@ function! s:lcs(s1, s2) return a:s1[endindex - maxlength + 1 : endindex] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#lcs(s1, s2) - return s:lcs(a:s1, a:s2) - endfunction -endif - \" Returns 0-based index of last character of common prefix \" If there is no common prefix, returns -1. @@ -168,19 +162,13 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor return i endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_prefix(a, b) - return s:common_prefix(a:a, a:b) - endfunction -endif - \" Returns 0-based indices of start of common suffix \" @@ -199,12 +187,6 @@ function! s:common_suffix(a, b, start) return [sa+1, sb+1] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_suffix(a, b, start) - return s:common_suffix(a:a, a:b, a:start) - endfunction -endif - \" Split a string on another string. \" Assumes 1 occurrence of the delimiter. @@ -217,9 +199,3 @@ function! s:split(str, delimiter) return [a:str[:i-1], a:str[i+len(a:delimiter):]] endfunction - -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#split(str, delimiter) - return s:split(a:str, a:delimiter) - endfunction -endif diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 349b7ca..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -382,12 +382,6 @@ function! s:fix_file_references(filepath, hunk_diff) return join(lines, \"n\").\"n\" endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#hunk#fix_file_references(filepath, hunk_diff) - return s:fix_file_references(a:filepath, a:hunk_diff) - endfunction -endif - function! s:adjust_hunk_summary(hunk_diff) abort let line_adjustment = s:line_adjustment_for_current_hunk() @@ -507,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -554,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -571,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index d053267..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -118,8 +118,9 @@ endfunction let s:set_path_handler = {} function! s:set_path_handler.out(buffer, listing) abort - let [status, path] = split(s:strip_trailing_new_line(a:listing)) - if status =~ '[[:lower:]]' + let listing = s:strip_trailing_new_line(a:listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:buffer, 'path', -3) else call gitgutter#utility#setbufvar(a:buffer, 'path', path) @@ -167,8 +168,9 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort return endif - let [status, path] = split(s:strip_trailing_new_line(listing)) - if status =~ '[[:lower:]]' + let listing = s:strip_trailing_new_line(listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else call gitgutter#utility#setbufvar(a:bufnr, 'path', path) diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction diff --git a/test/test_gitgutter.vim b/test/test_gitgutter.vim index 595c254..df527b8 100644 --- a/test/test_gitgutter.vim +++ b/test/test_gitgutter.vim @@ -205,6 +205,20 @@ function Test_filename_with_square_brackets() endfunction +function Test_filename_with_space() + call system('touch fix ture.txt && git add fix ture.txt') + edit fix ture.txt + normal ggo* + call s:trigger_gitgutter() + + let expected = [ + {'lnum': 1, 'name': 'GitGutterLineAdded'}, + {'lnum': 2, 'name': 'GitGutterLineAdded'} + ] + call s:assert_signs(expected, 'fix ture.txt') +endfunction + + function Test_filename_leading_dash() call system('touch -- -fixture.txt && git add -- -fixture.txt') edit -fixture.txt @@ -835,6 +849,9 @@ endfunction function Test_fix_file_references() + let sid = matchstr(execute('filter autoload/gitgutter/hunk.vim scriptnames'), 'd+') + let FixFileReferences = function(\"<SNR>\".sid.\"_fix_file_references\") + \" No special characters let hunk_diff = join([ 'diff --git a/fixture.txt b/fixture.txt', @@ -855,7 +872,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" diff.mnemonicPrefix; spaces in filename let hunk_diff = join([ @@ -877,7 +894,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" Backslashes in filename; quotation marks let hunk_diff = join([ @@ -899,7 +916,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) endfunction @@ -975,39 +992,45 @@ endfunction function Test_common_prefix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonPrefix = function(\"<SNR>\".sid.\"_common_prefix\") + \" zero length - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('', 'foo')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('foo', '')) + call assert_equal(-1, CommonPrefix('', 'foo')) + call assert_equal(-1, CommonPrefix('foo', '')) \" nothing in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+pqrst')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('abcde', 'pqrst')) + call assert_equal(-1, CommonPrefix('-abcde', '+pqrst')) + call assert_equal(-1, CommonPrefix('abcde', 'pqrst')) \" something in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcpq')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abcpq')) - call assert_equal(0, gitgutter#diff_highlight#common_prefix('abc', 'apq')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcpq')) + call assert_equal(2, CommonPrefix('abcde', 'abcpq')) + call assert_equal(0, CommonPrefix('abc', 'apq')) \" everything in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcde')) - call assert_equal(4, gitgutter#diff_highlight#common_prefix('abcde', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcde')) + call assert_equal(4, CommonPrefix('abcde', 'abcde')) \" different lengths - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abx')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abcde', 'abx')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abx', '+abcde')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abx', 'abcde')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abc')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abc')) + call assert_equal(-1, CommonPrefix('-abcde', '+abx')) + call assert_equal(1, CommonPrefix('abcde', 'abx')) + call assert_equal(-1, CommonPrefix('-abx', '+abcde')) + call assert_equal(1, CommonPrefix('abx', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abc')) + call assert_equal(2, CommonPrefix('abcde', 'abc')) endfunction function Test_common_suffix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonSuffix = function(\"<SNR>\".sid.\"_common_suffix\") + \" nothing in common - call assert_equal([6,6], gitgutter#diff_highlight#common_suffix('-abcde', '+pqrst', 0)) + call assert_equal([6,6], CommonSuffix('-abcde', '+pqrst', 0)) \" something in common - call assert_equal([3,3], gitgutter#diff_highlight#common_suffix('-abcde', '+pqcde', 0)) + call assert_equal([3,3], CommonSuffix('-abcde', '+pqcde', 0)) \" everything in common - call assert_equal([5,5], gitgutter#diff_highlight#common_suffix('-abcde', '+abcde', 5)) + call assert_equal([5,5], CommonSuffix('-abcde', '+abcde', 5)) \" different lengths - call assert_equal([4,2], gitgutter#diff_highlight#common_suffix('-abcde', '+xde', 0)) - call assert_equal([2,4], gitgutter#diff_highlight#common_suffix('-xde', '+abcde', 0)) + call assert_equal([4,2], CommonSuffix('-abcde', '+xde', 0)) + call assert_equal([2,4], CommonSuffix('-xde', '+abcde', 0)) endfunction @@ -1096,18 +1119,24 @@ endfunction function Test_lcs() - call assert_equal('', gitgutter#diff_highlight#lcs('', 'foo')) - call assert_equal('', gitgutter#diff_highlight#lcs('foo', '')) - call assert_equal('bar', gitgutter#diff_highlight#lcs('foobarbaz', 'bbart')) - call assert_equal('transaction', gitgutter#diff_highlight#lcs('transaction.unexplained_amount', 'amount(transaction)')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Lcs = function(\"<SNR>\".sid.\"_lcs\") + + call assert_equal('', Lcs('', 'foo')) + call assert_equal('', Lcs('foo', '')) + call assert_equal('bar', Lcs('foobarbaz', 'bbart')) + call assert_equal('transaction', Lcs('transaction.unexplained_amount', 'amount(transaction)')) endfunction function Test_split() - call assert_equal(['foo', 'baz'], gitgutter#diff_highlight#split('foobarbaz', 'bar')) - call assert_equal(['', 'barbaz'], gitgutter#diff_highlight#split('foobarbaz', 'foo')) - call assert_equal(['foobar', ''], gitgutter#diff_highlight#split('foobarbaz', 'baz')) - call assert_equal(['1', '2'], gitgutter#diff_highlight#split('1~2', '~')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Split = function(\"<SNR>\".sid.\"_split\") + + call assert_equal(['foo', 'baz'], Split('foobarbaz', 'bar')) + call assert_equal(['', 'barbaz'], Split('foobarbaz', 'foo')) + call assert_equal(['foobar', ''], Split('foobarbaz', 'baz')) + call assert_equal(['1', '2'], Split('1~2', '~')) endfunction ", "completion": "Whitespace "}
{"prompt": "diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index 7686686..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -240,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index ec21b44..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -150,12 +150,6 @@ function! s:lcs(s1, s2) return a:s1[endindex - maxlength + 1 : endindex] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#lcs(s1, s2) - return s:lcs(a:s1, a:s2) - endfunction -endif - \" Returns 0-based index of last character of common prefix \" If there is no common prefix, returns -1. @@ -168,19 +162,13 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor return i endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_prefix(a, b) - return s:common_prefix(a:a, a:b) - endfunction -endif - \" Returns 0-based indices of start of common suffix \" @@ -199,12 +187,6 @@ function! s:common_suffix(a, b, start) return [sa+1, sb+1] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_suffix(a, b, start) - return s:common_suffix(a:a, a:b, a:start) - endfunction -endif - \" Split a string on another string. \" Assumes 1 occurrence of the delimiter. @@ -217,9 +199,3 @@ function! s:split(str, delimiter) return [a:str[:i-1], a:str[i+len(a:delimiter):]] endfunction - -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#split(str, delimiter) - return s:split(a:str, a:delimiter) - endfunction -endif diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 349b7ca..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -382,12 +382,6 @@ function! s:fix_file_references(filepath, hunk_diff) return join(lines, \"n\").\"n\" endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#hunk#fix_file_references(filepath, hunk_diff) - return s:fix_file_references(a:filepath, a:hunk_diff) - endfunction -endif - function! s:adjust_hunk_summary(hunk_diff) abort let line_adjustment = s:line_adjustment_for_current_hunk() @@ -507,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -554,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -571,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index f2c1a4c..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -118,8 +118,9 @@ endfunction let s:set_path_handler = {} function! s:set_path_handler.out(buffer, listing) abort - let [status, path] = split(s:strip_trailing_new_line(a:listing)) - if status =~ '[[:lower:]]' + let listing = s:strip_trailing_new_line(a:listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:buffer, 'path', -3) else call gitgutter#utility#setbufvar(a:buffer, 'path', path) @@ -148,7 +149,10 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort \" LICENCE README.mkd autoload doc plugin screenshot.png test -3 - assume unchanged call gitgutter#utility#setbufvar(a:bufnr, 'path', -1) - let cmd = gitgutter#utility#cd_cmd(a:bufnr, g:gitgutter_git_executable.' '.g:gitgutter_git_args.' ls-files -v --error-unmatch --full-name -z -- '.gitgutter#utility#shellescape(s:filename(a:bufnr))) + let cmd = gitgutter#utility#cd_cmd(a:bufnr, + g:gitgutter_git_executable.' '.g:gitgutter_git_args. + ' ls-files -v --error-unmatch --full-name -z -- '. + gitgutter#utility#shellescape(s:filename(a:bufnr))) if g:gitgutter_async && gitgutter#async#available() && !has('vim_starting') let handler = copy(s:set_path_handler) @@ -164,8 +168,9 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort return endif - let [status, path] = split(s:strip_trailing_new_line(listing)) - if status =~ '[[:lower:]]' + let listing = s:strip_trailing_new_line(listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else call gitgutter#utility#setbufvar(a:bufnr, 'path', path) diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction diff --git a/test/test_gitgutter.vim b/test/test_gitgutter.vim index 595c254..df527b8 100644 --- a/test/test_gitgutter.vim +++ b/test/test_gitgutter.vim @@ -205,6 +205,20 @@ function Test_filename_with_square_brackets() endfunction +function Test_filename_with_space() + call system('touch fix ture.txt && git add fix ture.txt') + edit fix ture.txt + normal ggo* + call s:trigger_gitgutter() + + let expected = [ + {'lnum': 1, 'name': 'GitGutterLineAdded'}, + {'lnum': 2, 'name': 'GitGutterLineAdded'} + ] + call s:assert_signs(expected, 'fix ture.txt') +endfunction + + function Test_filename_leading_dash() call system('touch -- -fixture.txt && git add -- -fixture.txt') edit -fixture.txt @@ -835,6 +849,9 @@ endfunction function Test_fix_file_references() + let sid = matchstr(execute('filter autoload/gitgutter/hunk.vim scriptnames'), 'd+') + let FixFileReferences = function(\"<SNR>\".sid.\"_fix_file_references\") + \" No special characters let hunk_diff = join([ 'diff --git a/fixture.txt b/fixture.txt', @@ -855,7 +872,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" diff.mnemonicPrefix; spaces in filename let hunk_diff = join([ @@ -877,7 +894,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" Backslashes in filename; quotation marks let hunk_diff = join([ @@ -899,7 +916,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) endfunction @@ -975,39 +992,45 @@ endfunction function Test_common_prefix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonPrefix = function(\"<SNR>\".sid.\"_common_prefix\") + \" zero length - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('', 'foo')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('foo', '')) + call assert_equal(-1, CommonPrefix('', 'foo')) + call assert_equal(-1, CommonPrefix('foo', '')) \" nothing in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+pqrst')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('abcde', 'pqrst')) + call assert_equal(-1, CommonPrefix('-abcde', '+pqrst')) + call assert_equal(-1, CommonPrefix('abcde', 'pqrst')) \" something in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcpq')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abcpq')) - call assert_equal(0, gitgutter#diff_highlight#common_prefix('abc', 'apq')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcpq')) + call assert_equal(2, CommonPrefix('abcde', 'abcpq')) + call assert_equal(0, CommonPrefix('abc', 'apq')) \" everything in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcde')) - call assert_equal(4, gitgutter#diff_highlight#common_prefix('abcde', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcde')) + call assert_equal(4, CommonPrefix('abcde', 'abcde')) \" different lengths - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abx')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abcde', 'abx')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abx', '+abcde')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abx', 'abcde')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abc')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abc')) + call assert_equal(-1, CommonPrefix('-abcde', '+abx')) + call assert_equal(1, CommonPrefix('abcde', 'abx')) + call assert_equal(-1, CommonPrefix('-abx', '+abcde')) + call assert_equal(1, CommonPrefix('abx', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abc')) + call assert_equal(2, CommonPrefix('abcde', 'abc')) endfunction function Test_common_suffix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonSuffix = function(\"<SNR>\".sid.\"_common_suffix\") + \" nothing in common - call assert_equal([6,6], gitgutter#diff_highlight#common_suffix('-abcde', '+pqrst', 0)) + call assert_equal([6,6], CommonSuffix('-abcde', '+pqrst', 0)) \" something in common - call assert_equal([3,3], gitgutter#diff_highlight#common_suffix('-abcde', '+pqcde', 0)) + call assert_equal([3,3], CommonSuffix('-abcde', '+pqcde', 0)) \" everything in common - call assert_equal([5,5], gitgutter#diff_highlight#common_suffix('-abcde', '+abcde', 5)) + call assert_equal([5,5], CommonSuffix('-abcde', '+abcde', 5)) \" different lengths - call assert_equal([4,2], gitgutter#diff_highlight#common_suffix('-abcde', '+xde', 0)) - call assert_equal([2,4], gitgutter#diff_highlight#common_suffix('-xde', '+abcde', 0)) + call assert_equal([4,2], CommonSuffix('-abcde', '+xde', 0)) + call assert_equal([2,4], CommonSuffix('-xde', '+abcde', 0)) endfunction @@ -1096,18 +1119,24 @@ endfunction function Test_lcs() - call assert_equal('', gitgutter#diff_highlight#lcs('', 'foo')) - call assert_equal('', gitgutter#diff_highlight#lcs('foo', '')) - call assert_equal('bar', gitgutter#diff_highlight#lcs('foobarbaz', 'bbart')) - call assert_equal('transaction', gitgutter#diff_highlight#lcs('transaction.unexplained_amount', 'amount(transaction)')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Lcs = function(\"<SNR>\".sid.\"_lcs\") + + call assert_equal('', Lcs('', 'foo')) + call assert_equal('', Lcs('foo', '')) + call assert_equal('bar', Lcs('foobarbaz', 'bbart')) + call assert_equal('transaction', Lcs('transaction.unexplained_amount', 'amount(transaction)')) endfunction function Test_split() - call assert_equal(['foo', 'baz'], gitgutter#diff_highlight#split('foobarbaz', 'bar')) - call assert_equal(['', 'barbaz'], gitgutter#diff_highlight#split('foobarbaz', 'foo')) - call assert_equal(['foobar', ''], gitgutter#diff_highlight#split('foobarbaz', 'baz')) - call assert_equal(['1', '2'], gitgutter#diff_highlight#split('1~2', '~')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Split = function(\"<SNR>\".sid.\"_split\") + + call assert_equal(['foo', 'baz'], Split('foobarbaz', 'bar')) + call assert_equal(['', 'barbaz'], Split('foobarbaz', 'foo')) + call assert_equal(['foobar', ''], Split('foobarbaz', 'baz')) + call assert_equal(['1', '2'], Split('1~2', '~')) endfunction ", "completion": "Heeds git's \"assume unchanged\" bit I.e. does not diff files which should be assumed unchanged. See: git update-index --[no-]assume-unchanged -- <file> git ls-files -v Closes #826. "}
{"prompt": "diff --git a/README.mkd b/README.mkd index 0b49493..408bb2f 100644 --- a/README.mkd +++ b/README.mkd @@ -18,6 +18,7 @@ Features: LICENCE README.mkd autoload doc plugin screenshot.png test Stage partial hunks. LICENCE README.mkd autoload doc plugin screenshot.png test Provides a hunk text object. LICENCE README.mkd autoload doc plugin screenshot.png test Diffs against index (default) or any commit. +* Heeds git's \"assume unchanged\" bit. LICENCE README.mkd autoload doc plugin screenshot.png test Allows folding all unchanged text. LICENCE README.mkd autoload doc plugin screenshot.png test Provides fold text showing whether folded lines have been changed. LICENCE README.mkd autoload doc plugin screenshot.png test Can load all hunk locations into quickfix list or the current window's location list. diff --git a/autoload/gitgutter.vim b/autoload/gitgutter.vim index bbc1c99..6978979 100644 --- a/autoload/gitgutter.vim +++ b/autoload/gitgutter.vim @@ -44,6 +44,8 @@ function! gitgutter#process_buffer(bufnr, force) abort let diff = gitgutter#diff#run_diff(a:bufnr, g:gitgutter_diff_relative_to, 0) catch /gitgutter not tracked/ call gitgutter#debug#log('Not tracked: '.gitgutter#utility#file(a:bufnr)) + catch /gitgutter assume unchanged/ + call gitgutter#debug#log('Assume unchanged: '.gitgutter#utility#file(a:bufnr)) catch /gitgutter diff failed/ call gitgutter#debug#log('Diff failed: '.gitgutter#utility#file(a:bufnr)) call gitgutter#hunk#reset(a:bufnr) @@ -238,9 +240,11 @@ endfunction function! gitgutter#difforig() let bufnr = bufnr('') let path = gitgutter#utility#repo_path(bufnr, 1) + let filetype = &filetype vertical new set buftype=nofile + let &filetype = filetype if g:gitgutter_diff_relative_to ==# 'index' let index_name = gitgutter#utility#get_diff_base(bufnr).':'.path diff --git a/autoload/gitgutter/async.vim b/autoload/gitgutter/async.vim index d476748..8b9f130 100644 --- a/autoload/gitgutter/async.vim +++ b/autoload/gitgutter/async.vim @@ -1,8 +1,8 @@ let s:available = has('nvim') || ( has('job') && ( - (has('patch-7-4-1826') && !has('gui_running')) || - (has('patch-7-4-1850') && has('gui_running')) || - (has('patch-7-4-1832') && has('gui_macvim')) + (has('patch-7.4.1826') && !has('gui_running')) || + (has('patch-7.4.1850') && has('gui_running')) || + (has('patch-7.4.1832') && has('gui_macvim')) ) ) diff --git a/autoload/gitgutter/diff.vim b/autoload/gitgutter/diff.vim index 0ed77ed..794cd14 100644 --- a/autoload/gitgutter/diff.vim +++ b/autoload/gitgutter/diff.vim @@ -77,6 +77,10 @@ function! gitgutter#diff#run_diff(bufnr, from, preserve_full_diff) abort throw 'gitgutter not tracked' endif + if gitgutter#utility#repo_path(a:bufnr, 0) == -3 + throw 'gitgutter assume unchanged' + endif + \" Wrap compound commands in parentheses to make Windows happy. \" bash doesn't mind the parentheses. let cmd = '(' diff --git a/autoload/gitgutter/diff_highlight.vim b/autoload/gitgutter/diff_highlight.vim index ec21b44..803dd6e 100644 --- a/autoload/gitgutter/diff_highlight.vim +++ b/autoload/gitgutter/diff_highlight.vim @@ -150,12 +150,6 @@ function! s:lcs(s1, s2) return a:s1[endindex - maxlength + 1 : endindex] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#lcs(s1, s2) - return s:lcs(a:s1, a:s2) - endfunction -endif - \" Returns 0-based index of last character of common prefix \" If there is no common prefix, returns -1. @@ -168,19 +162,13 @@ function! s:common_prefix(a, b) return -1 endif for i in range(len) - if a:a[i:i] != a:b[i:i] + if a:a[i:i] !=# a:b[i:i] return i - 1 endif endfor return i endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_prefix(a, b) - return s:common_prefix(a:a, a:b) - endfunction -endif - \" Returns 0-based indices of start of common suffix \" @@ -199,12 +187,6 @@ function! s:common_suffix(a, b, start) return [sa+1, sb+1] endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#common_suffix(a, b, start) - return s:common_suffix(a:a, a:b, a:start) - endfunction -endif - \" Split a string on another string. \" Assumes 1 occurrence of the delimiter. @@ -217,9 +199,3 @@ function! s:split(str, delimiter) return [a:str[:i-1], a:str[i+len(a:delimiter):]] endfunction - -if $VIM_GITGUTTER_TEST - function! gitgutter#diff_highlight#split(str, delimiter) - return s:split(a:str, a:delimiter) - endfunction -endif diff --git a/autoload/gitgutter/hunk.vim b/autoload/gitgutter/hunk.vim index 349b7ca..7eabf8f 100644 --- a/autoload/gitgutter/hunk.vim +++ b/autoload/gitgutter/hunk.vim @@ -382,12 +382,6 @@ function! s:fix_file_references(filepath, hunk_diff) return join(lines, \"n\").\"n\" endfunction -if $VIM_GITGUTTER_TEST - function! gitgutter#hunk#fix_file_references(filepath, hunk_diff) - return s:fix_file_references(a:filepath, a:hunk_diff) - endfunction -endif - function! s:adjust_hunk_summary(hunk_diff) abort let line_adjustment = s:line_adjustment_for_current_hunk() @@ -507,18 +501,15 @@ endfunction \" Floating window: does not care where cursor is. \" Preview window: assumes cursor is in preview window. function! s:populate_hunk_preview_window(header, body) - let body_length = len(a:body) - if g:gitgutter_preview_win_floating if exists('*nvim_open_win') - let height = min([body_length, g:gitgutter_floating_window_options.height]) - \" Assumes cursor is not in previewing window. call nvim_buf_set_var(winbufnr(s:winid), 'hunk_header', a:header) let [_scrolloff, &scrolloff] = [&scrolloff, 0] - let width = max(map(copy(a:body), 'strdisplaywidth(v:val)')) + let [width, height] = s:screen_lines(a:body) + let height = min([height, g:gitgutter_floating_window_options.height]) call nvim_win_set_width(s:winid, width) call nvim_win_set_height(s:winid, height) @@ -554,9 +545,7 @@ function! s:populate_hunk_preview_window(header, body) call setline(1, a:body) setlocal nomodified - normal! G$ - let hunk_height = max([body_length, winline()]) - let height = min([hunk_height, &previewheight]) + let [_, height] = s:screen_lines(a:body) execute 'resize' height 1 @@ -571,6 +560,27 @@ function! s:populate_hunk_preview_window(header, body) endfunction +\" Calculates the number of columns and the number of screen lines the given +\" array of lines will take up, taking account of wrapping. +function! s:screen_lines(lines) + let [_virtualedit, &virtualedit]=[&virtualedit, 'all'] + let cursor = getcurpos() + normal! g$ + let available_width = virtcol('.') + call setpos('.', cursor) + let &virtualedit=_virtualedit + let width = min([max(map(copy(a:lines), 'strdisplaywidth(v:val)')), available_width]) + + if exists('*reduce') + let height = reduce(a:lines, { acc, val -> acc + strdisplaywidth(val) / width + (strdisplaywidth(val) % width == 0 ? 0 : 1) }, 0) + else + let height = eval(join(map(copy(a:lines), 'strdisplaywidth(v:val) / width + (strdisplaywidth(v:val) % width == 0 ? 0 : 1)'), '+')) + endif + + return [width, height] +endfunction + + function! s:enable_staging_from_hunk_preview_window() augroup gitgutter_hunk_preview autocmd! diff --git a/autoload/gitgutter/utility.vim b/autoload/gitgutter/utility.vim index f0eb27d..b81efbe 100644 --- a/autoload/gitgutter/utility.vim +++ b/autoload/gitgutter/utility.vim @@ -108,6 +108,7 @@ endfunction \" LICENCE README.mkd autoload doc plugin screenshot.png test non-empty string - path \" LICENCE README.mkd autoload doc plugin screenshot.png test -1 - pending \" LICENCE README.mkd autoload doc plugin screenshot.png test -2 - not tracked by git +\" LICENCE README.mkd autoload doc plugin screenshot.png test -3 - assume unchanged function! gitgutter#utility#repo_path(bufnr, shellesc) abort let p = gitgutter#utility#getbufvar(a:bufnr, 'path', '') return a:shellesc ? gitgutter#utility#shellescape(p) : p @@ -116,9 +117,14 @@ endfunction let s:set_path_handler = {} -function! s:set_path_handler.out(buffer, path) abort - let path = s:strip_trailing_new_line(a:path) - call gitgutter#utility#setbufvar(a:buffer, 'path', path) +function! s:set_path_handler.out(buffer, listing) abort + let listing = s:strip_trailing_new_line(a:listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' + call gitgutter#utility#setbufvar(a:buffer, 'path', -3) + else + call gitgutter#utility#setbufvar(a:buffer, 'path', path) + endif if type(self.continuation) == type(function('tr')) call self.continuation() @@ -140,9 +146,13 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort \" LICENCE README.mkd autoload doc plugin screenshot.png test non-empty string - path \" LICENCE README.mkd autoload doc plugin screenshot.png test -1 - pending \" LICENCE README.mkd autoload doc plugin screenshot.png test -2 - not tracked by git + \" LICENCE README.mkd autoload doc plugin screenshot.png test -3 - assume unchanged call gitgutter#utility#setbufvar(a:bufnr, 'path', -1) - let cmd = gitgutter#utility#cd_cmd(a:bufnr, g:gitgutter_git_executable.' '.g:gitgutter_git_args.' ls-files --error-unmatch --full-name -z -- '.gitgutter#utility#shellescape(s:filename(a:bufnr))) + let cmd = gitgutter#utility#cd_cmd(a:bufnr, + g:gitgutter_git_executable.' '.g:gitgutter_git_args. + ' ls-files -v --error-unmatch --full-name -z -- '. + gitgutter#utility#shellescape(s:filename(a:bufnr))) if g:gitgutter_async && gitgutter#async#available() && !has('vim_starting') let handler = copy(s:set_path_handler) @@ -151,11 +161,19 @@ function! gitgutter#utility#set_repo_path(bufnr, continuation) abort return 'async' endif - let path = gitgutter#utility#system(cmd) + let listing = gitgutter#utility#system(cmd) + if v:shell_error call gitgutter#utility#setbufvar(a:bufnr, 'path', -2) + return + endif + + let listing = s:strip_trailing_new_line(listing) + let [status, path] = [listing[0], listing[2:]] + if status =~# '[a-z]' + call gitgutter#utility#setbufvar(a:bufnr, 'path', -3) else - call gitgutter#utility#setbufvar(a:bufnr, 'path', s:strip_trailing_new_line(path)) + call gitgutter#utility#setbufvar(a:bufnr, 'path', path) endif endfunction diff --git a/plugin/gitgutter.vim b/plugin/gitgutter.vim index 9e989ce..008724e 100644 --- a/plugin/gitgutter.vim +++ b/plugin/gitgutter.vim @@ -245,8 +245,10 @@ function! s:on_bufenter() \" been any changes to the buffer since the first round, the second round \" will be cheap. if has('vim_starting') && !$VIM_GITGUTTER_TEST - if exists('*timer_start') - call timer_start(&updatetime, 'GitGutterCursorHold') + if exists('*timer_start') && has('lambda') + call s:next_tick(\"call gitgutter#process_buffer(+\".bufnr('').\", 0)\") + else + call gitgutter#process_buffer(bufnr(''), 0) endif return endif @@ -259,10 +261,6 @@ function! s:on_bufenter() endif endfunction -function! GitGutterCursorHold(timer) - execute 'doautocmd' s:nomodeline 'gitgutter CursorHold' -endfunction - function! s:next_tick(cmd) call timer_start(1, {-> execute(a:cmd)}) endfunction diff --git a/test/test_gitgutter.vim b/test/test_gitgutter.vim index f9aac59..df527b8 100644 --- a/test/test_gitgutter.vim +++ b/test/test_gitgutter.vim @@ -205,6 +205,20 @@ function Test_filename_with_square_brackets() endfunction +function Test_filename_with_space() + call system('touch fix ture.txt && git add fix ture.txt') + edit fix ture.txt + normal ggo* + call s:trigger_gitgutter() + + let expected = [ + {'lnum': 1, 'name': 'GitGutterLineAdded'}, + {'lnum': 2, 'name': 'GitGutterLineAdded'} + ] + call s:assert_signs(expected, 'fix ture.txt') +endfunction + + function Test_filename_leading_dash() call system('touch -- -fixture.txt && git add -- -fixture.txt') edit -fixture.txt @@ -835,6 +849,9 @@ endfunction function Test_fix_file_references() + let sid = matchstr(execute('filter autoload/gitgutter/hunk.vim scriptnames'), 'd+') + let FixFileReferences = function(\"<SNR>\".sid.\"_fix_file_references\") + \" No special characters let hunk_diff = join([ 'diff --git a/fixture.txt b/fixture.txt', @@ -855,7 +872,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" diff.mnemonicPrefix; spaces in filename let hunk_diff = join([ @@ -877,7 +894,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) \" Backslashes in filename; quotation marks let hunk_diff = join([ @@ -899,7 +916,7 @@ function Test_fix_file_references() '+x' ], \"n\").\"n\" - call assert_equal(expected, gitgutter#hunk#fix_file_references(filepath, hunk_diff)) + call assert_equal(expected, FixFileReferences(filepath, hunk_diff)) endfunction @@ -975,39 +992,45 @@ endfunction function Test_common_prefix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonPrefix = function(\"<SNR>\".sid.\"_common_prefix\") + \" zero length - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('', 'foo')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('foo', '')) + call assert_equal(-1, CommonPrefix('', 'foo')) + call assert_equal(-1, CommonPrefix('foo', '')) \" nothing in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+pqrst')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('abcde', 'pqrst')) + call assert_equal(-1, CommonPrefix('-abcde', '+pqrst')) + call assert_equal(-1, CommonPrefix('abcde', 'pqrst')) \" something in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcpq')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abcpq')) - call assert_equal(0, gitgutter#diff_highlight#common_prefix('abc', 'apq')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcpq')) + call assert_equal(2, CommonPrefix('abcde', 'abcpq')) + call assert_equal(0, CommonPrefix('abc', 'apq')) \" everything in common - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abcde')) - call assert_equal(4, gitgutter#diff_highlight#common_prefix('abcde', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abcde')) + call assert_equal(4, CommonPrefix('abcde', 'abcde')) \" different lengths - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abx')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abcde', 'abx')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abx', '+abcde')) - call assert_equal(1, gitgutter#diff_highlight#common_prefix('abx', 'abcde')) - call assert_equal(-1, gitgutter#diff_highlight#common_prefix('-abcde', '+abc')) - call assert_equal(2, gitgutter#diff_highlight#common_prefix('abcde', 'abc')) + call assert_equal(-1, CommonPrefix('-abcde', '+abx')) + call assert_equal(1, CommonPrefix('abcde', 'abx')) + call assert_equal(-1, CommonPrefix('-abx', '+abcde')) + call assert_equal(1, CommonPrefix('abx', 'abcde')) + call assert_equal(-1, CommonPrefix('-abcde', '+abc')) + call assert_equal(2, CommonPrefix('abcde', 'abc')) endfunction function Test_common_suffix() + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let CommonSuffix = function(\"<SNR>\".sid.\"_common_suffix\") + \" nothing in common - call assert_equal([6,6], gitgutter#diff_highlight#common_suffix('-abcde', '+pqrst', 0)) + call assert_equal([6,6], CommonSuffix('-abcde', '+pqrst', 0)) \" something in common - call assert_equal([3,3], gitgutter#diff_highlight#common_suffix('-abcde', '+pqcde', 0)) + call assert_equal([3,3], CommonSuffix('-abcde', '+pqcde', 0)) \" everything in common - call assert_equal([5,5], gitgutter#diff_highlight#common_suffix('-abcde', '+abcde', 5)) + call assert_equal([5,5], CommonSuffix('-abcde', '+abcde', 5)) \" different lengths - call assert_equal([4,2], gitgutter#diff_highlight#common_suffix('-abcde', '+xde', 0)) - call assert_equal([2,4], gitgutter#diff_highlight#common_suffix('-xde', '+abcde', 0)) + call assert_equal([4,2], CommonSuffix('-abcde', '+xde', 0)) + call assert_equal([2,4], CommonSuffix('-xde', '+abcde', 0)) endfunction @@ -1096,18 +1119,24 @@ endfunction function Test_lcs() - call assert_equal('', gitgutter#diff_highlight#lcs('', 'foo')) - call assert_equal('', gitgutter#diff_highlight#lcs('foo', '')) - call assert_equal('bar', gitgutter#diff_highlight#lcs('foobarbaz', 'bbart')) - call assert_equal('transaction', gitgutter#diff_highlight#lcs('transaction.unexplained_amount', 'amount(transaction)')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Lcs = function(\"<SNR>\".sid.\"_lcs\") + + call assert_equal('', Lcs('', 'foo')) + call assert_equal('', Lcs('foo', '')) + call assert_equal('bar', Lcs('foobarbaz', 'bbart')) + call assert_equal('transaction', Lcs('transaction.unexplained_amount', 'amount(transaction)')) endfunction function Test_split() - call assert_equal(['foo', 'baz'], gitgutter#diff_highlight#split('foobarbaz', 'bar')) - call assert_equal(['', 'barbaz'], gitgutter#diff_highlight#split('foobarbaz', 'foo')) - call assert_equal(['foobar', ''], gitgutter#diff_highlight#split('foobarbaz', 'baz')) - call assert_equal(['1', '2'], gitgutter#diff_highlight#split('1~2', '~')) + let sid = matchstr(execute('filter autoload/gitgutter/diff_highlight.vim scriptnames'), 'd+') + let Split = function(\"<SNR>\".sid.\"_split\") + + call assert_equal(['foo', 'baz'], Split('foobarbaz', 'bar')) + call assert_equal(['', 'barbaz'], Split('foobarbaz', 'foo')) + call assert_equal(['foobar', ''], Split('foobarbaz', 'baz')) + call assert_equal(['1', '2'], Split('1~2', '~')) endfunction @@ -1126,3 +1155,12 @@ function Test_foldtext() call assert_equal(0, gitgutter#fold#is_changed()) call assert_equal('+- 3 lines: a', gitgutter#fold#foldtext()) endfunction + + +function Test_assume_unchanged() + call system(\"git update-index --assume-unchanged fixture.txt\") + unlet b:gitgutter.path \" it was already set when fixture.txt was loaded in SetUp() + normal ggo* + call s:trigger_gitgutter() + call s:assert_signs([], 'fixture.txt') +endfunction ", "completion": "Add GitGutterDiffOrig command Closes #827. "}
{"prompt": "diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b ", "completion": "Link pod registry to Pods section in README (#1411) In the `Pods` section we were pointing to a place with a slightly outdated list of projects. This patch adds the correct link to the pod registry. "}
{"prompt": "diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b ", "completion": "Graalvm 22.3.0 (#1408) "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 4e564e6f..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,34 +7,31 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac -GRAALVM_FILENAME=\"graalvm-ce-java19-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" +GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" pushd \"$INSTALL_DIR\" >/dev/null -if ! [ -d \"graalvm-ce-java19-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java19-$GRAALVM_VERSION\" +if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness ", "completion": "Send text over the wire "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 4e564e6f..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,34 +7,31 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac -GRAALVM_FILENAME=\"graalvm-ce-java19-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" +GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" pushd \"$INSTALL_DIR\" >/dev/null -if ! [ -d \"graalvm-ce-java19-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java19-$GRAALVM_VERSION\" +if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index ebeea14a..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data) \"utf-8\")] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data) \"utf-8\")))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "fix windows build, hopefully "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 4e564e6f..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,34 +7,31 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac -GRAALVM_FILENAME=\"graalvm-ce-java19-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" +GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" pushd \"$INSTALL_DIR\" >/dev/null -if ! [ -d \"graalvm-ce-java19-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java19-$GRAALVM_VERSION\" +if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "macos "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 2f133a40..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,35 +7,31 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac -GRAALVM_FILENAME=\"graalvm-ce-java19-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" +GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" pushd \"$INSTALL_DIR\" >/dev/null -if ! [ -d \"graalvm-ce-java19-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java19-$GRAALVM_VERSION\" - \"graalvm-ce-java19-$GRAALVM_VERSION\"/bin/gu install native-image +if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "wip "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 1af53c37..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,21 +7,21 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" @@ -29,13 +29,9 @@ GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VER pushd \"$INSTALL_DIR\" >/dev/null if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java11-$GRAALVM_VERSION\" - \"graalvm-ce-java11-$GRAALVM_VERSION\"/bin/gu install native-image + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "debug "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index d7f64d36..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,21 +7,21 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" @@ -29,12 +29,9 @@ GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VER pushd \"$INSTALL_DIR\" >/dev/null if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - tar xzvf \"$GRAALVM_FILENAME\" - ls -la \"graalvm-ce-java11-$GRAALVM_VERSION\" + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "logg "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index f285024f..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,21 +7,21 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" @@ -29,12 +29,9 @@ GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VER pushd \"$INSTALL_DIR\" >/dev/null if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - ls -la - ls -la \"graalvm-ce-java11-$GRAALVM_VERSION\" - tar xzf \"$GRAALVM_FILENAME\" + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "log "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 42f0eb27..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,21 +7,21 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" @@ -29,10 +29,9 @@ GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VER pushd \"$INSTALL_DIR\" >/dev/null if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -LO \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - tar xzf \"$GRAALVM_FILENAME\" + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "log "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/script/compile.bat b/script/compile.bat index 78a1be3e..56d3396c 100644 --- a/script/compile.bat +++ b/script/compile.bat @@ -29,7 +29,6 @@ call %GRAALVM_HOME%binnative-image.cmd ^ \"-H:+ReportExceptionStackTraces\" ^ \"--verbose\" ^ \"--no-fallback\" ^ - \"--enable-preview\" ^ \"%BABASHKA_XMX%\" if %errorlevel% neq 0 exit /b %errorlevel% diff --git a/script/install-graalvm b/script/install-graalvm index 1f2b267e..19d43c5a 100755 --- a/script/install-graalvm +++ b/script/install-graalvm @@ -7,21 +7,21 @@ INSTALL_DIR=\"${1:-$HOME}\" GRAALVM_VERSION=\"${GRAALVM_VERSION:-21.2.0}\" case \"$BABASHKA_PLATFORM\" in - macos) - GRAALVM_PLATFORM=\"darwin\" - ;; - linux) - GRAALVM_PLATFORM=\"linux\" - ;; + macos) + GRAALVM_PLATFORM=\"darwin\" + ;; + linux) + GRAALVM_PLATFORM=\"linux\" + ;; esac case \"${BABASHKA_ARCH:-}\" in - aarch64) - GRAALVM_ARCH=\"aarch64\" - ;; - *) - GRAALVM_ARCH=\"amd64\" - ;; + aarch64) + GRAALVM_ARCH=\"aarch64\" + ;; + *) + GRAALVM_ARCH=\"amd64\" + ;; esac GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION.tar.gz\" @@ -29,10 +29,9 @@ GRAALVM_FILENAME=\"graalvm-ce-java11-$GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VER pushd \"$INSTALL_DIR\" >/dev/null if ! [ -d \"graalvm-ce-java11-$GRAALVM_VERSION\" ]; then - echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" - echo \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" - tar xzf \"$GRAALVM_FILENAME\" + echo \"Downloading GraalVM $GRAALVM_PLATFORM-$GRAALVM_ARCH-$GRAALVM_VERSION on '$PWD'...\" + curl -O -sL \"https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-$GRAALVM_VERSION/$GRAALVM_FILENAME\" + tar xzf \"$GRAALVM_FILENAME\" fi popd >/dev/null diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "print link "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 32c7e4bd..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java19-22.3.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java19-22.3.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java19-22.3.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 19b0cb89..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -6,7 +6,7 @@ task: env: LEIN_ROOT: \"true\" GRAALVM_VERSION: \"22.3.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java19-22.3.0/Contents/Home + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.portal/vs-code.edn b/.portal/vs-code.edn deleted file mode 100644 index 90c32986..00000000 --- a/.portal/vs-code.edn +++ /dev/null @@ -1 +0,0 @@ -{:host \"localhost\", :port 51379} No newline at end of file diff --git a/Dockerfile b/Dockerfile index aa958100..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -15,14 +15,14 @@ RUN if [ \"${TARGETARCH}\" = \"\" ] || [ \"${TARGETARCH}\" = \"amd64\" ]; then export GRAALVM_ARCH=aarch64; fi && echo \"Installing GraalVM for ${GRAALVM_ARCH}\" && - curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - tar -xzf graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && - rm graalvm-ce-java19-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz + curl -sLO https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-${GRAALVM_VERSION}/graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + tar -xzf graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz && + rm graalvm-ce-java11-linux-${GRAALVM_ARCH}-${GRAALVM_VERSION}.tar.gz ARG BABASHKA_XMX=\"-J-Xmx4500m\" -ENV GRAALVM_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}\" -ENV JAVA_HOME=\"/opt/graalvm-ce-java19-${GRAALVM_VERSION}/bin\" +ENV GRAALVM_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}\" +ENV JAVA_HOME=\"/opt/graalvm-ce-java11-${GRAALVM_VERSION}/bin\" ENV PATH=\"$JAVA_HOME:$PATH\" ENV BABASHKA_XMX=$BABASHKA_XMX diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 37cc8fdb..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java19-22.3.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java19-windows-amd64-22.3.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 4887ebb7..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java19-22.3.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java19-22.3.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java19-22.3.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 24d050a6..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java19-22.3.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/resources/META-INF/babashka/deps.edn b/resources/META-INF/babashka/deps.edn index 54e38584..8cc78c93 100644 --- a/resources/META-INF/babashka/deps.edn +++ b/resources/META-INF/babashka/deps.edn @@ -156,9 +156,7 @@ :git/sha \"ca115fe00a0abf3a2f78452ab309c3aa4c00fc4e\" :deps/manifest :deps} lambdaisland/uri {:git/url \"https://github.com/lambdaisland/uri\" - :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\" - :deps/manifest :deps} - clj-commons/fs {:mvn/version \"1.6.310\"}} + :git/sha \"ac4f1f9c8e4f45a088db1c6383ce2191c973987c\"}} :classpath-overrides {org.clojure/clojure nil org.clojure/spec.alpha nil}} :clj-nvd diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index 9aa93f19..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -11,7 +11,7 @@ ;; GraalVM Community Edition 19.3.2 based on OpenJDK 8u252 ;; GraalVM Community Edition 19.3.2 based on OpenJDK 11.0.7 ;; -;; Currently we use GraalVM java19-20.1.0 +;; Currently we use GraalVM java11-20.1.0 (ns bump-graal-version (:require [clojure.string :as str] @@ -31,8 +31,8 @@ \"\" \"./bump_graal_version.clj -g 19.3.2 (the new version)\" \"or\" - \"./bump_graal_version.clj -g 19.3.2 --java java19\" - \"(for GraalVM java19-19.3.2)\" + \"./bump_graal_version.clj -g 19.3.2 --java java11\" + \"(for GraalVM java11-19.3.2)\" \"\"] (str/join newline)))) @@ -55,7 +55,7 @@ ;; ;; We could have them as environment variables (def current-graal-version \"22.3.0\") -(def current-java-version \"java19\") +(def current-java-version \"java11\") (def cl-options [[\"-g\" \"--graal VERSION\" \"graal version\"] diff --git a/script/compile b/script/compile index b698f978..17b7dc76 100755 --- a/script/compile +++ b/script/compile @@ -55,8 +55,7 @@ args=(\"-jar\" \"$BABASHKA_JAR\" \"--no-fallback\" \"--native-image-info\" # --trace-class-initialization=jdk.internal.net.http.common.DebugLogger,jdk.internal.net.http.websocket.WebSocketImpl,jdk.internal.net.http.common.Utils - \"$BABASHKA_XMX\" - \"--enable-preview\") + \"$BABASHKA_XMX\") BABASHKA_STATIC=${BABASHKA_STATIC:-} BABASHKA_MUSL=${BABASHKA_MUSL:-} diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index 03d6fcc7..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -47,8 +47,7 @@ {:name \"sleep\"} {:name \"start\"} {:name \"toString\"} - {:name \"yield\"} - {:name \"ofVirtual\"}]} + {:name \"yield\"}]} java.net.URL {:allPublicConstructors true :allPublicFields true @@ -402,7 +401,6 @@ java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy java.util.concurrent.ThreadPoolExecutor$DiscardPolicy - java.util.concurrent.ExecutorService java.util.concurrent.ScheduledExecutorService java.util.concurrent.Future java.util.concurrent.FutureTask @@ -626,8 +624,6 @@ java.util.concurrent.Future (instance? java.util.concurrent.ScheduledExecutorService v) java.util.concurrent.ScheduledExecutorService - (instance? java.util.concurrent.ExecutorService v) - java.util.concurrent.ExecutorService (instance? java.util.Iterator v) java.util.Iterator ;; keep commas for merge friendliness diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "jvm19 "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 90dab434..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -114,7 +114,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (defn unix [shorted? static? musl? arch executor-conf resource-class graalvm-home platform] (let [env {:LEIN_ROOT \"true\" - :GRAALVM_VERSION \"22.2.0\" + :GRAALVM_VERSION \"22.3.0\" :GRAALVM_HOME graalvm-home :BABASHKA_PLATFORM (if (= \"mac\" platform) \"macos\" @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.2.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.2.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.2.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 91a7a8e3..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -5,8 +5,8 @@ task: skip: \"changesIncludeOnly('logo/*', '**.md')\" env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.2.0/Contents/Home + GRAALVM_VERSION: \"22.3.0\" + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml index d1bb7dc5..66e1f6ef 100644 --- a/.github/workflows/build.yml +++ b/.github/workflows/build.yml @@ -102,7 +102,7 @@ jobs: runs-on: ${{ matrix.os }} env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" + GRAALVM_VERSION: \"22.3.0\" BABASHKA_PLATFORM: ${{ matrix.name }} # used in release script BABASHKA_TEST_ENV: native BABASHKA_XMX: \"-J-Xmx6500m\" @@ -126,7 +126,7 @@ jobs: if: \"matrix.static == false\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' github-token: ${{ secrets.GITHUB_TOKEN }} @@ -135,7 +135,7 @@ jobs: if: \"matrix.static == true\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' native-image-musl: true diff --git a/Dockerfile b/Dockerfile index 13ee10fa..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -5,7 +5,7 @@ RUN apt update RUN apt install --no-install-recommends -yy build-essential zlib1g-dev WORKDIR \"/opt\" -ENV GRAALVM_VERSION=\"22.2.0\" +ENV GRAALVM_VERSION=\"22.3.0\" ARG TARGETARCH ENV BABASHKA_ARCH=${TARGETARCH} ENV GRAALVM_ARCH=${TARGETARCH} diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 7ad68110..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.2.0/graalvm-ce-java11-windows-amd64-22.2.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 2b5fa2e1..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.2.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.2.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 3f1ecd49..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.2.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index f8178f6e..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -54,7 +54,7 @@ ;; OR ;; ;; We could have them as environment variables -(def current-graal-version \"22.2.0\") +(def current-graal-version \"22.3.0\") (def current-java-version \"java11\") (def cl-options diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "changelog "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 90dab434..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -114,7 +114,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (defn unix [shorted? static? musl? arch executor-conf resource-class graalvm-home platform] (let [env {:LEIN_ROOT \"true\" - :GRAALVM_VERSION \"22.2.0\" + :GRAALVM_VERSION \"22.3.0\" :GRAALVM_HOME graalvm-home :BABASHKA_PLATFORM (if (= \"mac\" platform) \"macos\" @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.2.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.2.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.2.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 91a7a8e3..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -5,8 +5,8 @@ task: skip: \"changesIncludeOnly('logo/*', '**.md')\" env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.2.0/Contents/Home + GRAALVM_VERSION: \"22.3.0\" + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml index d1bb7dc5..66e1f6ef 100644 --- a/.github/workflows/build.yml +++ b/.github/workflows/build.yml @@ -102,7 +102,7 @@ jobs: runs-on: ${{ matrix.os }} env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" + GRAALVM_VERSION: \"22.3.0\" BABASHKA_PLATFORM: ${{ matrix.name }} # used in release script BABASHKA_TEST_ENV: native BABASHKA_XMX: \"-J-Xmx6500m\" @@ -126,7 +126,7 @@ jobs: if: \"matrix.static == false\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' github-token: ${{ secrets.GITHUB_TOKEN }} @@ -135,7 +135,7 @@ jobs: if: \"matrix.static == true\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' native-image-musl: true diff --git a/CHANGELOG.md b/CHANGELOG.md index 14018e1f..cc31ebf2 100644 --- a/CHANGELOG.md +++ b/CHANGELOG.md @@ -10,6 +10,7 @@ A preview of the next release can be installed from - Fix [#1401](https://github.com/babashka/babashka/issues/1401): mutation of `deftype` field should be visible in protocol method - Fix [#1405](https://github.com/babashka/babashka/issues/1405): drop name metadata from conditionally defined var - [#602](https://github.com/babashka/babashka/issues/602): add lib tests for clj-commons/fs ([@bobisageek](https://github.com/bobisageek)) +- Add `java.net.URLConnection` class ## 1.0.164 (2022-10-17) diff --git a/Dockerfile b/Dockerfile index 13ee10fa..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -5,7 +5,7 @@ RUN apt update RUN apt install --no-install-recommends -yy build-essential zlib1g-dev WORKDIR \"/opt\" -ENV GRAALVM_VERSION=\"22.2.0\" +ENV GRAALVM_VERSION=\"22.3.0\" ARG TARGETARCH ENV BABASHKA_ARCH=${TARGETARCH} ENV GRAALVM_ARCH=${TARGETARCH} diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 7ad68110..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.2.0/graalvm-ce-java11-windows-amd64-22.2.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 2b5fa2e1..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.2.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.2.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 3f1ecd49..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.2.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index f8178f6e..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -54,7 +54,7 @@ ;; OR ;; ;; We could have them as environment variables -(def current-graal-version \"22.2.0\") +(def current-graal-version \"22.3.0\") (def current-java-version \"java11\") (def cl-options diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "Add java.net.URLConnection "}
{"prompt": "diff --git a/.circleci/script/short_ci.clj b/.circleci/script/short_ci.clj index 90dab434..b977f773 100644 --- a/.circleci/script/short_ci.clj +++ b/.circleci/script/short_ci.clj @@ -114,7 +114,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (defn unix [shorted? static? musl? arch executor-conf resource-class graalvm-home platform] (let [env {:LEIN_ROOT \"true\" - :GRAALVM_VERSION \"22.2.0\" + :GRAALVM_VERSION \"22.3.0\" :GRAALVM_HOME graalvm-home :BABASHKA_PLATFORM (if (= \"mac\" platform) \"macos\" @@ -168,7 +168,7 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl {:persist_to_workspace {:root \"/tmp\" :paths [\"release\"]}} {:save_cache - {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.2.0\"] + {:paths [\"~/.m2\" \"~/graalvm-ce-java11-22.3.0\"] :key cache-key}} {:store_artifacts {:path \"/tmp/release\" :destination \"release\"}} @@ -180,8 +180,8 @@ java -jar \"$jar\" --config .build/bb.edn --deps-root . release-artifact \"$refl (let [docker-executor-conf {:docker [{:image \"circleci/clojure:openjdk-11-lein-2.9.8-bullseye\"}]} machine-executor-conf {:machine {:image \"ubuntu-2004:202111-01\"}} mac-executor-conf {:macos {:xcode \"14.0.0\"}} - linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.2.0\" - mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.2.0/Contents/Home\"] + linux-graalvm-home \"/home/circleci/graalvm-ce-java11-22.3.0\" + mac-graalvm-home \"/Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home\"] (ordered-map :version 2.1 :commands diff --git a/.cirrus.yml b/.cirrus.yml index 91a7a8e3..aa61cb30 100644 --- a/.cirrus.yml +++ b/.cirrus.yml @@ -5,8 +5,8 @@ task: skip: \"changesIncludeOnly('logo/*', '**.md')\" env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" - GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.2.0/Contents/Home + GRAALVM_VERSION: \"22.3.0\" + GRAALVM_HOME: ${HOME}/graalvm-ce-java11-22.3.0/Contents/Home BABASHKA_PLATFORM: macos # used in release script BABASHKA_ARCH: aarch64 BABASHKA_TEST_ENV: native diff --git a/.github/workflows/build.yml b/.github/workflows/build.yml index d1bb7dc5..66e1f6ef 100644 --- a/.github/workflows/build.yml +++ b/.github/workflows/build.yml @@ -102,7 +102,7 @@ jobs: runs-on: ${{ matrix.os }} env: LEIN_ROOT: \"true\" - GRAALVM_VERSION: \"22.2.0\" + GRAALVM_VERSION: \"22.3.0\" BABASHKA_PLATFORM: ${{ matrix.name }} # used in release script BABASHKA_TEST_ENV: native BABASHKA_XMX: \"-J-Xmx6500m\" @@ -126,7 +126,7 @@ jobs: if: \"matrix.static == false\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' github-token: ${{ secrets.GITHUB_TOKEN }} @@ -135,7 +135,7 @@ jobs: if: \"matrix.static == true\" uses: graalvm/setup-graalvm@v1 with: - version: '22.2.0' + version: '22.3.0' java-version: '11' components: 'native-image' native-image-musl: true diff --git a/CHANGELOG.md b/CHANGELOG.md index 14018e1f..cc31ebf2 100644 --- a/CHANGELOG.md +++ b/CHANGELOG.md @@ -10,6 +10,7 @@ A preview of the next release can be installed from - Fix [#1401](https://github.com/babashka/babashka/issues/1401): mutation of `deftype` field should be visible in protocol method - Fix [#1405](https://github.com/babashka/babashka/issues/1405): drop name metadata from conditionally defined var - [#602](https://github.com/babashka/babashka/issues/602): add lib tests for clj-commons/fs ([@bobisageek](https://github.com/bobisageek)) +- Add `java.net.URLConnection` class ## 1.0.164 (2022-10-17) diff --git a/Dockerfile b/Dockerfile index 13ee10fa..573142ce 100644 --- a/Dockerfile +++ b/Dockerfile @@ -5,7 +5,7 @@ RUN apt update RUN apt install --no-install-recommends -yy build-essential zlib1g-dev WORKDIR \"/opt\" -ENV GRAALVM_VERSION=\"22.2.0\" +ENV GRAALVM_VERSION=\"22.3.0\" ARG TARGETARCH ENV BABASHKA_ARCH=${TARGETARCH} ENV GRAALVM_ARCH=${TARGETARCH} diff --git a/README.md b/README.md index 418f2036..032f8893 100644 --- a/README.md +++ b/README.md @@ -355,7 +355,7 @@ Pods are programs that can be used as a Clojure library by babashka. Documentation is available in the [pod library repo](https://github.com/babashka/pods). -A list of available pods can be found [here](doc/projects.md#pods). +A list of available pods can be found in the [pod registry](https://github.com/babashka/pod-registry). ## Differences with Clojure diff --git a/appveyor.yml b/appveyor.yml index 7ad68110..7e60e61c 100644 --- a/appveyor.yml +++ b/appveyor.yml @@ -7,8 +7,8 @@ image: Visual Studio 2017 clone_folder: C:projectsbabashka  environment: - GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 - JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.2.0 + GRAALVM_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 + JAVA_HOME: C:projectsbabashkagraalvmgraalvm-ce-java11-22.3.0 BABASHKA_XMX: \"-J-Xmx5g\"  skip_commits: @@ -38,7 +38,7 @@ clone_script:  build_script: - cmd: >- - powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.2.0/graalvm-ce-java11-windows-amd64-22.2.0.zip', 'graalvm.zip') }\" + powershell -Command \"if (Test-Path('graalvm')) { return } else { (New-Object Net.WebClient).DownloadFile('https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-windows-amd64-22.3.0.zip', 'graalvm.zip') }\"  powershell -Command \"if (Test-Path('graalvm')) { return } else { Expand-Archive graalvm.zip graalvm }\"  diff --git a/deps.clj b/deps.clj index 9cc85f5e..0765bdab 160000 --- a/deps.clj +++ b/deps.clj @@ -1 +1 @@ -Subproject commit 9cc85f5e0c00c63a333af415a6a24730da424aa7 +Subproject commit 0765bdabb35522beb653693c18f7266b400d9d3b diff --git a/doc/build.md b/doc/build.md index 2b5fa2e1..4de497e0 100644 --- a/doc/build.md +++ b/doc/build.md @@ -3,24 +3,24 @@ ## Prerequisites - Install [lein](https://leiningen.org/) for producing uberjars -- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.2.0*. +- Download [GraalVM](https://www.graalvm.org/downloads/). Currently we use *java11-22.3.0*. - For Windows, installing Visual Studio 2019 with the \"Desktop development with C++\" workload is recommended. - Set `$GRAALVM_HOME` to the GraalVM distribution directory. On macOS this can look like: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0/Contents/Home + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0/Contents/Home ``` On linux: ``` shell - export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.2.0 + export GRAALVM_HOME=~/Downloads/graalvm-ce-java11-22.3.0 ``` On Windows, from the [Visual Studio 2019 x64 Native Tools Command Prompt](https://github.com/oracle/graal/issues/2116#issuecomment-590470806) or `cmd.exe` (not Powershell): ``` - set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.2.0 + set GRAALVM_HOME=%USERPROFILE%Downloadsgraalvm-ce-java11-22.3.0 ``` If you are not running from the x64 Native Tools Command Prompt, you will need to set additional environment variables using: ``` diff --git a/doc/dev.md b/doc/dev.md index 3f1ecd49..dac50075 100644 --- a/doc/dev.md +++ b/doc/dev.md @@ -37,7 +37,7 @@ reasons: ## Requirements -You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.2.0. +You need [lein](https://leiningen.org/) for running JVM tests and/or producing uberjars. For building binaries you need GraalVM. Currently we use java11-22.3.0. ## Clone repository diff --git a/script/bump_graal_version.clj b/script/bump_graal_version.clj index f8178f6e..191c8e01 100755 --- a/script/bump_graal_version.clj +++ b/script/bump_graal_version.clj @@ -54,7 +54,7 @@ ;; OR ;; ;; We could have them as environment variables -(def current-graal-version \"22.2.0\") +(def current-graal-version \"22.3.0\") (def current-java-version \"java11\") (def cl-options diff --git a/src/babashka/impl/classes.clj b/src/babashka/impl/classes.clj index f9340772..dcbd5217 100644 --- a/src/babashka/impl/classes.clj +++ b/src/babashka/impl/classes.clj @@ -301,7 +301,8 @@ java.net.SocketException java.net.UnknownHostException java.net.URI - ;; java.net.URL, see below + ;; java.net.URL, see custom map + java.net.URLConnection java.net.URLEncoder java.net.URLDecoder ~@(when features/java-nio? diff --git a/test/babashka/crypto_test.clj b/test/babashka/crypto_test.clj index 08549691..48503f69 100644 --- a/test/babashka/crypto_test.clj +++ b/test/babashka/crypto_test.clj @@ -17,7 +17,10 @@ (deftest hmac-sha-256-test (let [key-s \"some-key\" data \"some-data\" - expected-sha (String. (hmac-sha-256 (.getBytes key-s) data))] + expected-sha (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")] + (prn expected-sha) (is (= expected-sha (bb '(do (ns net (:import (javax.crypto Mac) (javax.crypto.spec SecretKeySpec))) @@ -28,4 +31,6 @@ (.doFinal mac (.getBytes data \"UTF-8\")))) (let [key-s \"some-key\" data \"some-data\"] - (String. (hmac-sha-256 (.getBytes key-s) data))))))))) + (String. (.encode (java.util.Base64/getEncoder) + (hmac-sha-256 (.getBytes key-s) data)) + \"utf-8\")))))))) ", "completion": "Add fs lib test (#1406) "}
{"prompt": "diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: ", "completion": "Fixed #33606 -- Cleansed sessionid cookie in error reports. Co-authored-by: Simon Charette <charette.s@gmail.com> "}
{"prompt": "diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" ", "completion": "Completed test coverage for contrib.auth.forms. "}
{"prompt": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" ", "completion": "Fixed #34109 -- Updated instructions for running with Uvicorn. Co-authored-by: Paolo Melchiorre <paolo@melchiorre.org> "}
{"prompt": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" ", "completion": "Refs #33173 -- Added Python 3.11 to classifiers and tox.ini. "}
{"prompt": "diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/setup.cfg b/setup.cfg index 61a9cf25e1..cc511c96e6 100644 --- a/setup.cfg +++ b/setup.cfg @@ -20,6 +20,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Topic :: Internet :: WWW/HTTP Topic :: Internet :: WWW/HTTP :: Dynamic Content Topic :: Internet :: WWW/HTTP :: WSGI diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" diff --git a/tox.ini b/tox.ini index aad46f7d68..e3db75bf4a 100644 --- a/tox.ini +++ b/tox.ini @@ -24,7 +24,7 @@ passenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY OBJC_DISABLE_INITIALIZE setenv = PYTHONDONTWRITEBYTECODE=1 deps = - py{3,38,39,310}: -rtests/requirements/py3.txt + py{3,38,39,310,311}: -rtests/requirements/py3.txt postgres: -rtests/requirements/postgres.txt mysql: -rtests/requirements/mysql.txt oracle: -rtests/requirements/oracle.txt ", "completion": "Refs #33173 -- Used Python 3.11 for GitHub actions. "}
{"prompt": "diff --git a/.github/workflows/docs.yml b/.github/workflows/docs.yml index 9975a632bf..b1a8b27107 100644 --- a/.github/workflows/docs.yml +++ b/.github/workflows/docs.yml @@ -30,7 +30,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' cache: 'pip' cache-dependency-path: 'docs/requirements.txt' - run: python -m pip install -r docs/requirements.txt diff --git a/.github/workflows/linters.yml b/.github/workflows/linters.yml index 37904b5d5d..35113a945a 100644 --- a/.github/workflows/linters.yml +++ b/.github/workflows/linters.yml @@ -27,7 +27,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install flake8 - name: flake8 # Pinned to v1.0.2. @@ -44,7 +44,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install isort - name: isort # Pinned to v1.0.2. diff --git a/.github/workflows/schedule_tests.yml b/.github/workflows/schedule_tests.yml index 4677a3ed32..be23c8853b 100644 --- a/.github/workflows/schedule_tests.yml +++ b/.github/workflows/schedule_tests.yml @@ -19,7 +19,7 @@ jobs: - '3.8' - '3.9' - '3.10' - - '3.11-dev' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} continue-on-error: true steps: diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml index cfdc661560..5d4c1b68d7 100644 --- a/.github/workflows/tests.yml +++ b/.github/workflows/tests.yml @@ -23,7 +23,7 @@ jobs: strategy: matrix: python-version: - - '3.10' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} steps: - name: Checkout diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/setup.cfg b/setup.cfg index 61a9cf25e1..cc511c96e6 100644 --- a/setup.cfg +++ b/setup.cfg @@ -20,6 +20,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Topic :: Internet :: WWW/HTTP Topic :: Internet :: WWW/HTTP :: Dynamic Content Topic :: Internet :: WWW/HTTP :: WSGI diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" diff --git a/tox.ini b/tox.ini index aad46f7d68..e3db75bf4a 100644 --- a/tox.ini +++ b/tox.ini @@ -24,7 +24,7 @@ passenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY OBJC_DISABLE_INITIALIZE setenv = PYTHONDONTWRITEBYTECODE=1 deps = - py{3,38,39,310}: -rtests/requirements/py3.txt + py{3,38,39,310,311}: -rtests/requirements/py3.txt postgres: -rtests/requirements/postgres.txt mysql: -rtests/requirements/mysql.txt oracle: -rtests/requirements/oracle.txt ", "completion": "Refs #33173 -- Fixed destroying test databases when running tests in parallel using spawn on Windows. Thanks Simon Willison for inspiration. "}
{"prompt": "diff --git a/.github/workflows/docs.yml b/.github/workflows/docs.yml index 9975a632bf..b1a8b27107 100644 --- a/.github/workflows/docs.yml +++ b/.github/workflows/docs.yml @@ -30,7 +30,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' cache: 'pip' cache-dependency-path: 'docs/requirements.txt' - run: python -m pip install -r docs/requirements.txt diff --git a/.github/workflows/linters.yml b/.github/workflows/linters.yml index 37904b5d5d..35113a945a 100644 --- a/.github/workflows/linters.yml +++ b/.github/workflows/linters.yml @@ -27,7 +27,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install flake8 - name: flake8 # Pinned to v1.0.2. @@ -44,7 +44,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install isort - name: isort # Pinned to v1.0.2. diff --git a/.github/workflows/schedule_tests.yml b/.github/workflows/schedule_tests.yml index 4677a3ed32..be23c8853b 100644 --- a/.github/workflows/schedule_tests.yml +++ b/.github/workflows/schedule_tests.yml @@ -19,7 +19,7 @@ jobs: - '3.8' - '3.9' - '3.10' - - '3.11-dev' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} continue-on-error: true steps: diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml index cfdc661560..5d4c1b68d7 100644 --- a/.github/workflows/tests.yml +++ b/.github/workflows/tests.yml @@ -23,7 +23,7 @@ jobs: strategy: matrix: python-version: - - '3.10' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} steps: - name: Checkout diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py index d15dea4b03..c334a86ac6 100644 --- a/django/db/backends/sqlite3/creation.py +++ b/django/db/backends/sqlite3/creation.py @@ -104,6 +104,7 @@ class DatabaseCreation(BaseDatabaseCreation): elif multiprocessing.get_start_method() == \"spawn\": ondisk_db = sqlite3.connect(target_database_name, uri=True) self.connection.connection.backup(ondisk_db) + ondisk_db.close() def _destroy_test_db(self, test_database_name, verbosity): if test_database_name and not self.is_in_memory_db(test_database_name): diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/setup.cfg b/setup.cfg index 61a9cf25e1..cc511c96e6 100644 --- a/setup.cfg +++ b/setup.cfg @@ -20,6 +20,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Topic :: Internet :: WWW/HTTP Topic :: Internet :: WWW/HTTP :: Dynamic Content Topic :: Internet :: WWW/HTTP :: WSGI diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" diff --git a/tox.ini b/tox.ini index aad46f7d68..e3db75bf4a 100644 --- a/tox.ini +++ b/tox.ini @@ -24,7 +24,7 @@ passenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY OBJC_DISABLE_INITIALIZE setenv = PYTHONDONTWRITEBYTECODE=1 deps = - py{3,38,39,310}: -rtests/requirements/py3.txt + py{3,38,39,310,311}: -rtests/requirements/py3.txt postgres: -rtests/requirements/postgres.txt mysql: -rtests/requirements/mysql.txt oracle: -rtests/requirements/oracle.txt ", "completion": "Bumped gh-problem-matcher-wrap version to 1.0.2. "}
{"prompt": "diff --git a/.github/workflows/docs.yml b/.github/workflows/docs.yml index 9975a632bf..b1a8b27107 100644 --- a/.github/workflows/docs.yml +++ b/.github/workflows/docs.yml @@ -30,7 +30,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' cache: 'pip' cache-dependency-path: 'docs/requirements.txt' - run: python -m pip install -r docs/requirements.txt diff --git a/.github/workflows/linters.yml b/.github/workflows/linters.yml index eaa11ced3c..35113a945a 100644 --- a/.github/workflows/linters.yml +++ b/.github/workflows/linters.yml @@ -27,11 +27,11 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install flake8 - name: flake8 - # Pinned to v1.0.1. - uses: liskin/gh-problem-matcher-wrap@d9e345a28ab1eeb00c349e8bb199a102aa58acba + # Pinned to v1.0.2. + uses: liskin/gh-problem-matcher-wrap@e7d110d699a16b3dead9ef8b1f9470f93765ae95 with: linters: flake8 run: flake8 @@ -44,11 +44,11 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install isort - name: isort - # Pinned to v1.0.1. - uses: liskin/gh-problem-matcher-wrap@d9e345a28ab1eeb00c349e8bb199a102aa58acba + # Pinned to v1.0.2. + uses: liskin/gh-problem-matcher-wrap@e7d110d699a16b3dead9ef8b1f9470f93765ae95 with: linters: isort run: isort --check --diff django tests scripts diff --git a/.github/workflows/schedule_tests.yml b/.github/workflows/schedule_tests.yml index 4677a3ed32..be23c8853b 100644 --- a/.github/workflows/schedule_tests.yml +++ b/.github/workflows/schedule_tests.yml @@ -19,7 +19,7 @@ jobs: - '3.8' - '3.9' - '3.10' - - '3.11-dev' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} continue-on-error: true steps: diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml index cfdc661560..5d4c1b68d7 100644 --- a/.github/workflows/tests.yml +++ b/.github/workflows/tests.yml @@ -23,7 +23,7 @@ jobs: strategy: matrix: python-version: - - '3.10' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} steps: - name: Checkout diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py index d15dea4b03..c334a86ac6 100644 --- a/django/db/backends/sqlite3/creation.py +++ b/django/db/backends/sqlite3/creation.py @@ -104,6 +104,7 @@ class DatabaseCreation(BaseDatabaseCreation): elif multiprocessing.get_start_method() == \"spawn\": ondisk_db = sqlite3.connect(target_database_name, uri=True) self.connection.connection.backup(ondisk_db) + ondisk_db.close() def _destroy_test_db(self, test_database_name, verbosity): if test_database_name and not self.is_in_memory_db(test_database_name): diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/setup.cfg b/setup.cfg index 61a9cf25e1..cc511c96e6 100644 --- a/setup.cfg +++ b/setup.cfg @@ -20,6 +20,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Topic :: Internet :: WWW/HTTP Topic :: Internet :: WWW/HTTP :: Dynamic Content Topic :: Internet :: WWW/HTTP :: WSGI diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" diff --git a/tox.ini b/tox.ini index aad46f7d68..e3db75bf4a 100644 --- a/tox.ini +++ b/tox.ini @@ -24,7 +24,7 @@ passenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY OBJC_DISABLE_INITIALIZE setenv = PYTHONDONTWRITEBYTECODE=1 deps = - py{3,38,39,310}: -rtests/requirements/py3.txt + py{3,38,39,310,311}: -rtests/requirements/py3.txt postgres: -rtests/requirements/postgres.txt mysql: -rtests/requirements/mysql.txt oracle: -rtests/requirements/oracle.txt ", "completion": "Fixed DatabaseFeatures.supports_select_(intersection/difference) on MariaDB and MySQL 8.0.31+. "}
{"prompt": "diff --git a/.github/workflows/docs.yml b/.github/workflows/docs.yml index 9975a632bf..b1a8b27107 100644 --- a/.github/workflows/docs.yml +++ b/.github/workflows/docs.yml @@ -30,7 +30,7 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' cache: 'pip' cache-dependency-path: 'docs/requirements.txt' - run: python -m pip install -r docs/requirements.txt diff --git a/.github/workflows/linters.yml b/.github/workflows/linters.yml index eaa11ced3c..35113a945a 100644 --- a/.github/workflows/linters.yml +++ b/.github/workflows/linters.yml @@ -27,11 +27,11 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install flake8 - name: flake8 - # Pinned to v1.0.1. - uses: liskin/gh-problem-matcher-wrap@d9e345a28ab1eeb00c349e8bb199a102aa58acba + # Pinned to v1.0.2. + uses: liskin/gh-problem-matcher-wrap@e7d110d699a16b3dead9ef8b1f9470f93765ae95 with: linters: flake8 run: flake8 @@ -44,11 +44,11 @@ jobs: - name: Set up Python uses: actions/setup-python@v4 with: - python-version: '3.10' + python-version: '3.11' - run: python -m pip install isort - name: isort - # Pinned to v1.0.1. - uses: liskin/gh-problem-matcher-wrap@d9e345a28ab1eeb00c349e8bb199a102aa58acba + # Pinned to v1.0.2. + uses: liskin/gh-problem-matcher-wrap@e7d110d699a16b3dead9ef8b1f9470f93765ae95 with: linters: isort run: isort --check --diff django tests scripts diff --git a/.github/workflows/schedule_tests.yml b/.github/workflows/schedule_tests.yml index 4677a3ed32..be23c8853b 100644 --- a/.github/workflows/schedule_tests.yml +++ b/.github/workflows/schedule_tests.yml @@ -19,7 +19,7 @@ jobs: - '3.8' - '3.9' - '3.10' - - '3.11-dev' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} continue-on-error: true steps: diff --git a/.github/workflows/tests.yml b/.github/workflows/tests.yml index cfdc661560..5d4c1b68d7 100644 --- a/.github/workflows/tests.yml +++ b/.github/workflows/tests.yml @@ -23,7 +23,7 @@ jobs: strategy: matrix: python-version: - - '3.10' + - '3.11' name: Windows, SQLite, Python ${{ matrix.python-version }} steps: - name: Checkout diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py index 9d6a9918bb..b3cfc6723c 100644 --- a/django/contrib/auth/forms.py +++ b/django/contrib/auth/forms.py @@ -378,12 +378,11 @@ class SetPasswordForm(forms.Form): def clean_new_password2(self): password1 = self.cleaned_data.get(\"new_password1\") password2 = self.cleaned_data.get(\"new_password2\") - if password1 and password2: - if password1 != password2: - raise ValidationError( - self.error_messages[\"password_mismatch\"], - code=\"password_mismatch\", - ) + if password1 and password2 and password1 != password2: + raise ValidationError( + self.error_messages[\"password_mismatch\"], + code=\"password_mismatch\", + ) password_validation.validate_password(password2, self.user) return password2 diff --git a/django/db/backends/mysql/features.py b/django/db/backends/mysql/features.py index d5641215ca..f2e4e1f1f4 100644 --- a/django/db/backends/mysql/features.py +++ b/django/db/backends/mysql/features.py @@ -20,8 +20,6 @@ class DatabaseFeatures(BaseDatabaseFeatures): atomic_transactions = False can_clone_databases = True supports_temporal_subtraction = True - supports_select_intersection = False - supports_select_difference = False supports_slicing_ordering_in_compound = True supports_index_on_text_field = False supports_update_conflicts = True @@ -322,6 +320,15 @@ class DatabaseFeatures(BaseDatabaseFeatures): and self.connection.mysql_version >= (8, 0, 13) ) + @cached_property + def supports_select_intersection(self): + is_mariadb = self.connection.mysql_is_mariadb + return is_mariadb or self.connection.mysql_version >= (8, 0, 31) + + supports_select_difference = property( + operator.attrgetter(\"supports_select_intersection\") + ) + @cached_property def can_rename_index(self): if self.connection.mysql_is_mariadb: diff --git a/django/db/backends/sqlite3/creation.py b/django/db/backends/sqlite3/creation.py index d15dea4b03..c334a86ac6 100644 --- a/django/db/backends/sqlite3/creation.py +++ b/django/db/backends/sqlite3/creation.py @@ -104,6 +104,7 @@ class DatabaseCreation(BaseDatabaseCreation): elif multiprocessing.get_start_method() == \"spawn\": ondisk_db = sqlite3.connect(target_database_name, uri=True) self.connection.connection.backup(ondisk_db) + ondisk_db.close() def _destroy_test_db(self, test_database_name, verbosity): if test_database_name and not self.is_in_memory_db(test_database_name): diff --git a/django/views/debug.py b/django/views/debug.py index ea06224bf6..30a1dbc6da 100644 --- a/django/views/debug.py +++ b/django/views/debug.py @@ -110,7 +110,7 @@ class SafeExceptionReporterFilter: cleansed_substitute = \"********************\" hidden_settings = _lazy_re_compile( - \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE\", flags=re.I + \"API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE\", flags=re.I ) def cleanse_setting(self, key, value): @@ -118,10 +118,13 @@ class SafeExceptionReporterFilter: Cleanse an individual setting key/value of sensitive content. If the value is a dictionary, recursively cleanse the keys in that dictionary. \"\"\" - try: - is_sensitive = self.hidden_settings.search(key) - except TypeError: - is_sensitive = False + if key == settings.SESSION_COOKIE_NAME: + is_sensitive = True + else: + try: + is_sensitive = self.hidden_settings.search(key) + except TypeError: + is_sensitive = False if is_sensitive: cleansed = self.cleansed_substitute @@ -158,6 +161,14 @@ class SafeExceptionReporterFilter: return {} return {k: self.cleanse_setting(k, v) for k, v in request.META.items()} + def get_safe_cookies(self, request): + \"\"\" + Return a dictionary of request.COOKIES with sensitive values redacted. + \"\"\" + if not hasattr(request, \"COOKIES\"): + return {} + return {k: self.cleanse_setting(k, v) for k, v in request.COOKIES.items()} + def is_active(self, request): \"\"\" This filter is to add safety in production environments (i.e. DEBUG @@ -359,6 +370,7 @@ class ExceptionReporter: \"frames\": frames, \"request\": self.request, \"request_meta\": self.filter.get_safe_request_meta(self.request), + \"request_COOKIES_items\": self.filter.get_safe_cookies(self.request).items(), \"user_str\": user_str, \"filtered_POST_items\": list( self.filter.get_post_parameters(self.request).items() @@ -376,7 +388,6 @@ class ExceptionReporter: if self.request is not None: c[\"request_GET_items\"] = self.request.GET.items() c[\"request_FILES_items\"] = self.request.FILES.items() - c[\"request_COOKIES_items\"] = self.request.COOKIES.items() c[\"request_insecure_uri\"] = self._get_raw_insecure_uri() c[\"raising_view_name\"] = get_caller(self.request) diff --git a/docs/faq/install.txt b/docs/faq/install.txt index 9f4013b138..a0731fc717 100644 --- a/docs/faq/install.txt +++ b/docs/faq/install.txt @@ -51,7 +51,8 @@ What Python version can I use with Django? Django version Python versions ============== =============== 3.2 3.6, 3.7, 3.8, 3.9, 3.10 (added in 3.2.9) -4.0, 4.1 3.8, 3.9, 3.10 +4.0 3.8, 3.9, 3.10 +4.1 3.8, 3.9, 3.10, 3.11 (added in 4.1.3) 4.2 3.8, 3.9, 3.10, 3.11 ============== =============== diff --git a/docs/howto/deployment/asgi/uvicorn.txt b/docs/howto/deployment/asgi/uvicorn.txt index 148edc29ea..bcee952ea1 100644 --- a/docs/howto/deployment/asgi/uvicorn.txt +++ b/docs/howto/deployment/asgi/uvicorn.txt @@ -12,7 +12,7 @@ Installing Uvicorn You can install Uvicorn with ``pip``:: - python -m pip install uvicorn gunicorn + python -m pip install uvicorn Running Django in Uvicorn ========================= @@ -24,12 +24,30 @@ called (separated by a colon). For a typical Django project, invoking Uvicorn would look like:: - gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + python -m uvicorn myproject.asgi:application This will start one process listening on ``127.0.0.1:8000``. It requires that your project be on the Python path; to ensure that run this command from the same directory as your ``manage.py`` file. +In development mode, you can add ``--reload`` to cause the server to reload any +time a file is changed on disk. + For more advanced usage, please read the `Uvicorn documentation <Uvicorn_>`_. +Deploying Django using Uvicorn and Gunicorn +=========================================== + +Gunicorn_ is a robust web server that implements process monitoring and automatic +restarts. This can be useful when running Uvicorn in a production environment. + +To install Uvicorn and Gunicorn, use the following:: + + python -m pip install uvicorn gunicorn + +Then start Gunicorn using the Uvicorn worker class like this:: + + python -m gunicorn myproject.asgi:application -k uvicorn.workers.UvicornWorker + .. _Uvicorn: https://www.uvicorn.org/ +.. _Gunicorn: https://gunicorn.org/ diff --git a/docs/howto/error-reporting.txt b/docs/howto/error-reporting.txt index 6cd69d5857..b808a0a981 100644 --- a/docs/howto/error-reporting.txt +++ b/docs/howto/error-reporting.txt @@ -281,7 +281,11 @@ following attributes and methods: import re - re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE', flags=re.IGNORECASE) + re.compile(r'API|TOKEN|KEY|SECRET|PASS|SIGNATURE|HTTP_COOKIE', flags=re.IGNORECASE) + + .. versionchanged:: 4.2 + + ``HTTP_COOKIE`` was added. .. method:: is_active(request) diff --git a/docs/releases/4.1.3.txt b/docs/releases/4.1.3.txt index f6be8c68df..deb7b474ec 100644 --- a/docs/releases/4.1.3.txt +++ b/docs/releases/4.1.3.txt @@ -4,7 +4,8 @@ Django 4.1.3 release notes *Expected November 1, 2022* -Django 4.1.3 fixes several bugs in 4.1.2. +Django 4.1.3 fixes several bugs in 4.1.2 and adds compatibility with Python +3.11. Bugfixes ======== diff --git a/docs/releases/4.1.txt b/docs/releases/4.1.txt index 55e19e09ea..dd1470fc15 100644 --- a/docs/releases/4.1.txt +++ b/docs/releases/4.1.txt @@ -18,8 +18,9 @@ project. Python compatibility ==================== -Django 4.1 supports Python 3.8, 3.9, and 3.10. We **highly recommend** and only -officially support the latest release of each series. +Django 4.1 supports Python 3.8, 3.9, 3.10, and 3.11 (as of 4.1.3). We +**highly recommend** and only officially support the latest release of each +series. .. _whats-new-4.1: diff --git a/docs/releases/4.2.txt b/docs/releases/4.2.txt index 9c6526a3a0..58e4bd12ac 100644 --- a/docs/releases/4.2.txt +++ b/docs/releases/4.2.txt @@ -176,6 +176,9 @@ Forms AUTHORS CONTRIBUTING.rst Gruntfile.js INSTALL LICENSE LICENSE.python MANIFEST.in README.rst django docs extras js_tests package.json pyproject.toml scripts setup.cfg setup.py tests tox.ini :func:`~django.forms.models.modelform_factory` now respects the ``formfield_callback`` attribute of the ``form``’s ``Meta``. +* Session cookies are now treated as credentials and therefore hidden and + replaced with stars (``**********``) in error reports. + Generic Views ~~~~~~~~~~~~~ diff --git a/setup.cfg b/setup.cfg index 61a9cf25e1..cc511c96e6 100644 --- a/setup.cfg +++ b/setup.cfg @@ -20,6 +20,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Topic :: Internet :: WWW/HTTP Topic :: Internet :: WWW/HTTP :: Dynamic Content Topic :: Internet :: WWW/HTTP :: WSGI diff --git a/tests/auth_tests/test_forms.py b/tests/auth_tests/test_forms.py index 98bf264040..3bacd7a9fb 100644 --- a/tests/auth_tests/test_forms.py +++ b/tests/auth_tests/test_forms.py @@ -590,6 +590,14 @@ class AuthenticationFormTest(TestDataMixin, TestCase): form.fields[field_name].widget.attrs[\"autocomplete\"], autocomplete ) + def test_no_password(self): + data = {\"username\": \"username\"} + form = AuthenticationForm(None, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"password\"].errors, [Field.default_error_messages[\"required\"]] + ) + class SetPasswordFormTest(TestDataMixin, TestCase): def test_password_verification(self): @@ -655,6 +663,23 @@ class SetPasswordFormTest(TestDataMixin, TestCase): form[\"new_password2\"].errors, ) + def test_no_password(self): + user = User.objects.get(username=\"testclient\") + data = {\"new_password1\": \"new-password\"} + form = SetPasswordForm(user, data) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + form = SetPasswordForm(user, {}) + self.assertIs(form.is_valid(), False) + self.assertEqual( + form[\"new_password1\"].errors, [Field.default_error_messages[\"required\"]] + ) + self.assertEqual( + form[\"new_password2\"].errors, [Field.default_error_messages[\"required\"]] + ) + def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") data = { @@ -1201,6 +1226,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual(password_changed.call_count, 0) form.save() self.assertEqual(password_changed.call_count, 1) + self.assertEqual(form.changed_data, [\"password\"]) def test_password_whitespace_not_stripped(self): user = User.objects.get(username=\"testclient\") @@ -1212,6 +1238,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertTrue(form.is_valid()) self.assertEqual(form.cleaned_data[\"password1\"], data[\"password1\"]) self.assertEqual(form.cleaned_data[\"password2\"], data[\"password2\"]) + self.assertEqual(form.changed_data, [\"password\"]) def test_non_matching_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1220,6 +1247,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): self.assertEqual( form.errors[\"password2\"], [form.error_messages[\"password_mismatch\"]] ) + self.assertEqual(form.changed_data, [\"password\"]) def test_missing_passwords(self): user = User.objects.get(username=\"testclient\") @@ -1228,6 +1256,7 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form.errors[\"password1\"], required_error) self.assertEqual(form.errors[\"password2\"], required_error) + self.assertEqual(form.changed_data, []) def test_one_password(self): user = User.objects.get(username=\"testclient\") @@ -1235,9 +1264,11 @@ class AdminPasswordChangeFormTest(TestDataMixin, TestCase): required_error = [Field.default_error_messages[\"required\"]] self.assertEqual(form1.errors[\"password1\"], required_error) self.assertNotIn(\"password2\", form1.errors) + self.assertEqual(form1.changed_data, []) form2 = AdminPasswordChangeForm(user, {\"password1\": \"test\", \"password2\": \"\"}) self.assertEqual(form2.errors[\"password2\"], required_error) self.assertNotIn(\"password1\", form2.errors) + self.assertEqual(form2.changed_data, []) def test_html_autocomplete_attributes(self): user = User.objects.get(username=\"testclient\") diff --git a/tests/view_tests/tests/test_debug.py b/tests/view_tests/tests/test_debug.py index 5a07131349..7224a2b6b6 100644 --- a/tests/view_tests/tests/test_debug.py +++ b/tests/view_tests/tests/test_debug.py @@ -1696,6 +1696,12 @@ class ExceptionReporterFilterTests( ) self.assertNotIn(b\"super_secret\", response.content) + @override_settings(SESSION_COOKIE_NAME=\"djangosession\") + def test_cleanse_session_cookie_value(self): + self.client.cookies.load({\"djangosession\": \"should not be displayed\"}) + response = self.client.get(\"/raises500/\") + self.assertNotContains(response, \"should not be displayed\", status_code=500) + class CustomExceptionReporterFilter(SafeExceptionReporterFilter): cleansed_substitute = \"XXXXXXXXXXXXXXXXXXXX\" diff --git a/tox.ini b/tox.ini index aad46f7d68..e3db75bf4a 100644 --- a/tox.ini +++ b/tox.ini @@ -24,7 +24,7 @@ passenv = DJANGO_SETTINGS_MODULE PYTHONPATH HOME DISPLAY OBJC_DISABLE_INITIALIZE setenv = PYTHONDONTWRITEBYTECODE=1 deps = - py{3,38,39,310}: -rtests/requirements/py3.txt + py{3,38,39,310,311}: -rtests/requirements/py3.txt postgres: -rtests/requirements/postgres.txt mysql: -rtests/requirements/mysql.txt oracle: -rtests/requirements/oracle.txt ", "completion": "Fixed #19215 -- Fixed rendering ClearableFileInput when editing with invalid files. Thanks Michael Cardillo for the initial patch. "}
{"prompt": "diff --git a/package.json b/package.json index f6a71f6..9160138 100644 --- a/package.json +++ b/package.json @@ -1,7 +1,7 @@ { \"name\": \"jsencrypt\", \"type\": \"module\", - \"version\": \"3.2.1\", + \"version\": \"3.3.0\", \"description\": \"A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.\", \"main\": \"bin/jsencrypt.js\", \"module\": \"lib/index.js\", @@ -11,10 +11,10 @@ \"devDependencies\": { \"@types/expect\": \"^24.3.0\", \"@types/mocha\": \"^10.0.0\", - \"@types/node\": \"^18.7.21\", + \"@types/node\": \"^18.11.4\", \"chai\": \"^4.3.6\", \"dirty-chai\": \"^2.0.1\", - \"fs-jetpack\": \"^5.0.0\", + \"fs-jetpack\": \"^5.1.0\", \"mocha\": \"^10.0.0\", \"process\": \"^0.11.10\", \"ts-mocha\": \"^10.0.0\", @@ -50,6 +50,10 @@ { \"name\": \"Julio\", \"url\": \"https://github.com/jmgaya\" + }, + { + \"name\": \"Taehyun Hwang\", + \"url\": \"https://github.com/HwangTaehyun\" } ], \"homepage\": \"http://www.travistidwell.com/jsencrypt\", diff --git a/yarn.lock b/yarn.lock index 5aa9b3d..b751797 100644 --- a/yarn.lock +++ b/yarn.lock @@ -201,11 +201,16 @@ resolved \"https://registry.yarnpkg.com/@types/mocha/-/mocha-10.0.0.tgz#3d9018c575f0e3f7386c1de80ee66cc21fbb7a52\" integrity sha512-rADY+HtTOA52l9VZWtgQfn4p+UDVM2eDVkMZT1I6syp0YKxW2F9v+0pbRZLsvskhQv/vMb6ZfCay81GHbz5SHg== -\"@types/node@*\", \"@types/node@^18.7.21\": +\"@types/node@*\": version \"18.11.0\" resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.0.tgz#f38c7139247a1d619f6cc6f27b072606af7c289d\" integrity sha512-IOXCvVRToe7e0ny7HpT/X9Rb2RYtElG1a+VshjwT00HxrM2dWBApHQoqsI6WiY7Q03vdf2bCrIGzVrkF/5t10w== +\"@types/node@^18.11.4\": + version \"18.11.4\" + resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.4.tgz#7017a52e18dfaad32f55eebd539993014441949c\" + integrity sha512-BxcJpBu8D3kv/GZkx/gSMz6VnTJREBj/4lbzYOQueUOELkt8WrO6zAcSPmp9uRPEW/d+lUO8QK0W2xnS1hEU0A== + \"@types/stack-utils@^2.0.0\": version \"2.0.1\" resolved \"https://registry.yarnpkg.com/@types/stack-utils/-/stack-utils-2.0.1.tgz#20f18294f797f2209b5f65c8e3b5c8e8261d127c\" @@ -832,10 +837,10 @@ flat@^5.0.2: resolved \"https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241\" integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ== -fs-jetpack@^5.0.0: - version \"5.0.0\" - resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.0.0.tgz#020bde38f9d4a5422fc663b7934ac8abdc64a885\" - integrity sha512-0f9QoIbfAq/DuafAQisvsHJmLnJB2D53d9FXIu0UZPUg4Kzocez1+AinToPON6JD/C60kDlye121puiR5ivfdg== +fs-jetpack@^5.1.0: + version \"5.1.0\" + resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.1.0.tgz#dcd34d709b69007c9dc2420a6f2b9e8f986cff0d\" + integrity sha512-Xn4fDhLydXkuzepZVsr02jakLlmoARPy+YWIclo4kh0GyNGUHnTqeH/w/qIsVn50dFxtp8otPL2t/HcPJBbxUA== dependencies: minimatch \"^5.1.0\" ", "completion": "Merge pull request #266 from HwangTaehyun/master Fix test/index.html broken issue "}
{"prompt": "diff --git a/package.json b/package.json index f6a71f6..9160138 100644 --- a/package.json +++ b/package.json @@ -1,7 +1,7 @@ { \"name\": \"jsencrypt\", \"type\": \"module\", - \"version\": \"3.2.1\", + \"version\": \"3.3.0\", \"description\": \"A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.\", \"main\": \"bin/jsencrypt.js\", \"module\": \"lib/index.js\", @@ -11,10 +11,10 @@ \"devDependencies\": { \"@types/expect\": \"^24.3.0\", \"@types/mocha\": \"^10.0.0\", - \"@types/node\": \"^18.7.21\", + \"@types/node\": \"^18.11.4\", \"chai\": \"^4.3.6\", \"dirty-chai\": \"^2.0.1\", - \"fs-jetpack\": \"^5.0.0\", + \"fs-jetpack\": \"^5.1.0\", \"mocha\": \"^10.0.0\", \"process\": \"^0.11.10\", \"ts-mocha\": \"^10.0.0\", @@ -50,6 +50,10 @@ { \"name\": \"Julio\", \"url\": \"https://github.com/jmgaya\" + }, + { + \"name\": \"Taehyun Hwang\", + \"url\": \"https://github.com/HwangTaehyun\" } ], \"homepage\": \"http://www.travistidwell.com/jsencrypt\", diff --git a/yarn.lock b/yarn.lock index 5aa9b3d..b751797 100644 --- a/yarn.lock +++ b/yarn.lock @@ -201,11 +201,16 @@ resolved \"https://registry.yarnpkg.com/@types/mocha/-/mocha-10.0.0.tgz#3d9018c575f0e3f7386c1de80ee66cc21fbb7a52\" integrity sha512-rADY+HtTOA52l9VZWtgQfn4p+UDVM2eDVkMZT1I6syp0YKxW2F9v+0pbRZLsvskhQv/vMb6ZfCay81GHbz5SHg== -\"@types/node@*\", \"@types/node@^18.7.21\": +\"@types/node@*\": version \"18.11.0\" resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.0.tgz#f38c7139247a1d619f6cc6f27b072606af7c289d\" integrity sha512-IOXCvVRToe7e0ny7HpT/X9Rb2RYtElG1a+VshjwT00HxrM2dWBApHQoqsI6WiY7Q03vdf2bCrIGzVrkF/5t10w== +\"@types/node@^18.11.4\": + version \"18.11.4\" + resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.4.tgz#7017a52e18dfaad32f55eebd539993014441949c\" + integrity sha512-BxcJpBu8D3kv/GZkx/gSMz6VnTJREBj/4lbzYOQueUOELkt8WrO6zAcSPmp9uRPEW/d+lUO8QK0W2xnS1hEU0A== + \"@types/stack-utils@^2.0.0\": version \"2.0.1\" resolved \"https://registry.yarnpkg.com/@types/stack-utils/-/stack-utils-2.0.1.tgz#20f18294f797f2209b5f65c8e3b5c8e8261d127c\" @@ -832,10 +837,10 @@ flat@^5.0.2: resolved \"https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241\" integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ== -fs-jetpack@^5.0.0: - version \"5.0.0\" - resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.0.0.tgz#020bde38f9d4a5422fc663b7934ac8abdc64a885\" - integrity sha512-0f9QoIbfAq/DuafAQisvsHJmLnJB2D53d9FXIu0UZPUg4Kzocez1+AinToPON6JD/C60kDlye121puiR5ivfdg== +fs-jetpack@^5.1.0: + version \"5.1.0\" + resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.1.0.tgz#dcd34d709b69007c9dc2420a6f2b9e8f986cff0d\" + integrity sha512-Xn4fDhLydXkuzepZVsr02jakLlmoARPy+YWIclo4kh0GyNGUHnTqeH/w/qIsVn50dFxtp8otPL2t/HcPJBbxUA== dependencies: minimatch \"^5.1.0\" ", "completion": "Add build:test script to build script "}
{"prompt": "diff --git a/package.json b/package.json index f6f2732..9160138 100644 --- a/package.json +++ b/package.json @@ -1,7 +1,7 @@ { \"name\": \"jsencrypt\", \"type\": \"module\", - \"version\": \"3.2.1\", + \"version\": \"3.3.0\", \"description\": \"A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.\", \"main\": \"bin/jsencrypt.js\", \"module\": \"lib/index.js\", @@ -11,10 +11,10 @@ \"devDependencies\": { \"@types/expect\": \"^24.3.0\", \"@types/mocha\": \"^10.0.0\", - \"@types/node\": \"^18.7.21\", + \"@types/node\": \"^18.11.4\", \"chai\": \"^4.3.6\", \"dirty-chai\": \"^2.0.1\", - \"fs-jetpack\": \"^5.0.0\", + \"fs-jetpack\": \"^5.1.0\", \"mocha\": \"^10.0.0\", \"process\": \"^0.11.10\", \"ts-mocha\": \"^10.0.0\", @@ -32,7 +32,7 @@ \"build:dev\": \"tsc && tsc --project tsconfig-def.json && webpack\", \"build:test\": \"tsc && tsc --project tsconfig-def.json && webpack --config webpack.test.js\", \"build:prod\": \"tsc && tsc --project tsconfig-def.json && webpack --config webpack.prod.js\", - \"build\": \"npm run build:dev && npm run build:prod\", + \"build\": \"npm run build:dev && npm run build:test && npm run build:prod\", \"serve\": \"bundle exec jekyll server --config _config.build.yml\", \"test\": \"ts-mocha test/test.rsa.js\" }, @@ -50,6 +50,10 @@ { \"name\": \"Julio\", \"url\": \"https://github.com/jmgaya\" + }, + { + \"name\": \"Taehyun Hwang\", + \"url\": \"https://github.com/HwangTaehyun\" } ], \"homepage\": \"http://www.travistidwell.com/jsencrypt\", diff --git a/yarn.lock b/yarn.lock index 5aa9b3d..b751797 100644 --- a/yarn.lock +++ b/yarn.lock @@ -201,11 +201,16 @@ resolved \"https://registry.yarnpkg.com/@types/mocha/-/mocha-10.0.0.tgz#3d9018c575f0e3f7386c1de80ee66cc21fbb7a52\" integrity sha512-rADY+HtTOA52l9VZWtgQfn4p+UDVM2eDVkMZT1I6syp0YKxW2F9v+0pbRZLsvskhQv/vMb6ZfCay81GHbz5SHg== -\"@types/node@*\", \"@types/node@^18.7.21\": +\"@types/node@*\": version \"18.11.0\" resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.0.tgz#f38c7139247a1d619f6cc6f27b072606af7c289d\" integrity sha512-IOXCvVRToe7e0ny7HpT/X9Rb2RYtElG1a+VshjwT00HxrM2dWBApHQoqsI6WiY7Q03vdf2bCrIGzVrkF/5t10w== +\"@types/node@^18.11.4\": + version \"18.11.4\" + resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.4.tgz#7017a52e18dfaad32f55eebd539993014441949c\" + integrity sha512-BxcJpBu8D3kv/GZkx/gSMz6VnTJREBj/4lbzYOQueUOELkt8WrO6zAcSPmp9uRPEW/d+lUO8QK0W2xnS1hEU0A== + \"@types/stack-utils@^2.0.0\": version \"2.0.1\" resolved \"https://registry.yarnpkg.com/@types/stack-utils/-/stack-utils-2.0.1.tgz#20f18294f797f2209b5f65c8e3b5c8e8261d127c\" @@ -832,10 +837,10 @@ flat@^5.0.2: resolved \"https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241\" integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ== -fs-jetpack@^5.0.0: - version \"5.0.0\" - resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.0.0.tgz#020bde38f9d4a5422fc663b7934ac8abdc64a885\" - integrity sha512-0f9QoIbfAq/DuafAQisvsHJmLnJB2D53d9FXIu0UZPUg4Kzocez1+AinToPON6JD/C60kDlye121puiR5ivfdg== +fs-jetpack@^5.1.0: + version \"5.1.0\" + resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.1.0.tgz#dcd34d709b69007c9dc2420a6f2b9e8f986cff0d\" + integrity sha512-Xn4fDhLydXkuzepZVsr02jakLlmoARPy+YWIclo4kh0GyNGUHnTqeH/w/qIsVn50dFxtp8otPL2t/HcPJBbxUA== dependencies: minimatch \"^5.1.0\" ", "completion": "Change test.rsa.js to test.rsa.bundle.js "}
{"prompt": "diff --git a/package.json b/package.json index f6f2732..9160138 100644 --- a/package.json +++ b/package.json @@ -1,7 +1,7 @@ { \"name\": \"jsencrypt\", \"type\": \"module\", - \"version\": \"3.2.1\", + \"version\": \"3.3.0\", \"description\": \"A Javascript library to perform OpenSSL RSA Encryption, Decryption, and Key Generation.\", \"main\": \"bin/jsencrypt.js\", \"module\": \"lib/index.js\", @@ -11,10 +11,10 @@ \"devDependencies\": { \"@types/expect\": \"^24.3.0\", \"@types/mocha\": \"^10.0.0\", - \"@types/node\": \"^18.7.21\", + \"@types/node\": \"^18.11.4\", \"chai\": \"^4.3.6\", \"dirty-chai\": \"^2.0.1\", - \"fs-jetpack\": \"^5.0.0\", + \"fs-jetpack\": \"^5.1.0\", \"mocha\": \"^10.0.0\", \"process\": \"^0.11.10\", \"ts-mocha\": \"^10.0.0\", @@ -32,7 +32,7 @@ \"build:dev\": \"tsc && tsc --project tsconfig-def.json && webpack\", \"build:test\": \"tsc && tsc --project tsconfig-def.json && webpack --config webpack.test.js\", \"build:prod\": \"tsc && tsc --project tsconfig-def.json && webpack --config webpack.prod.js\", - \"build\": \"npm run build:dev && npm run build:prod\", + \"build\": \"npm run build:dev && npm run build:test && npm run build:prod\", \"serve\": \"bundle exec jekyll server --config _config.build.yml\", \"test\": \"ts-mocha test/test.rsa.js\" }, @@ -50,6 +50,10 @@ { \"name\": \"Julio\", \"url\": \"https://github.com/jmgaya\" + }, + { + \"name\": \"Taehyun Hwang\", + \"url\": \"https://github.com/HwangTaehyun\" } ], \"homepage\": \"http://www.travistidwell.com/jsencrypt\", diff --git a/test/index.html b/test/index.html index 2b92eb3..3a1b178 100644 --- a/test/index.html +++ b/test/index.html @@ -2,13 +2,16 @@ title: Testing JSEncrypt layout: default --- -<link href=\"test/libs/mocha.css\" rel=\"stylesheet\" type=\"text/css\"> + +<link href=\"test/libs/mocha.css\" rel=\"stylesheet\" type=\"text/css\" /> <div id=\"mocha\"></div> <script type=\"text/javascript\" src=\"test/libs/index.js\"></script> <script type=\"text/javascript\" src=\"test/libs/mocha.js\"></script> -<script>mocha.setup('bdd')</script> -<script type=\"text/javascript\" src=\"test/test.rsa.js\"></script> <script> - mocha.checkLeaks(); - mocha.run(); + mocha.setup(\"bdd\"); +</script> +<script type=\"text/javascript\" src=\"test/test.rsa.bundle.js\"></script> +<script> + mocha.checkLeaks(); + mocha.run(); </script> diff --git a/yarn.lock b/yarn.lock index 5aa9b3d..b751797 100644 --- a/yarn.lock +++ b/yarn.lock @@ -201,11 +201,16 @@ resolved \"https://registry.yarnpkg.com/@types/mocha/-/mocha-10.0.0.tgz#3d9018c575f0e3f7386c1de80ee66cc21fbb7a52\" integrity sha512-rADY+HtTOA52l9VZWtgQfn4p+UDVM2eDVkMZT1I6syp0YKxW2F9v+0pbRZLsvskhQv/vMb6ZfCay81GHbz5SHg== -\"@types/node@*\", \"@types/node@^18.7.21\": +\"@types/node@*\": version \"18.11.0\" resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.0.tgz#f38c7139247a1d619f6cc6f27b072606af7c289d\" integrity sha512-IOXCvVRToe7e0ny7HpT/X9Rb2RYtElG1a+VshjwT00HxrM2dWBApHQoqsI6WiY7Q03vdf2bCrIGzVrkF/5t10w== +\"@types/node@^18.11.4\": + version \"18.11.4\" + resolved \"https://registry.yarnpkg.com/@types/node/-/node-18.11.4.tgz#7017a52e18dfaad32f55eebd539993014441949c\" + integrity sha512-BxcJpBu8D3kv/GZkx/gSMz6VnTJREBj/4lbzYOQueUOELkt8WrO6zAcSPmp9uRPEW/d+lUO8QK0W2xnS1hEU0A== + \"@types/stack-utils@^2.0.0\": version \"2.0.1\" resolved \"https://registry.yarnpkg.com/@types/stack-utils/-/stack-utils-2.0.1.tgz#20f18294f797f2209b5f65c8e3b5c8e8261d127c\" @@ -832,10 +837,10 @@ flat@^5.0.2: resolved \"https://registry.yarnpkg.com/flat/-/flat-5.0.2.tgz#8ca6fe332069ffa9d324c327198c598259ceb241\" integrity sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ== -fs-jetpack@^5.0.0: - version \"5.0.0\" - resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.0.0.tgz#020bde38f9d4a5422fc663b7934ac8abdc64a885\" - integrity sha512-0f9QoIbfAq/DuafAQisvsHJmLnJB2D53d9FXIu0UZPUg4Kzocez1+AinToPON6JD/C60kDlye121puiR5ivfdg== +fs-jetpack@^5.1.0: + version \"5.1.0\" + resolved \"https://registry.yarnpkg.com/fs-jetpack/-/fs-jetpack-5.1.0.tgz#dcd34d709b69007c9dc2420a6f2b9e8f986cff0d\" + integrity sha512-Xn4fDhLydXkuzepZVsr02jakLlmoARPy+YWIclo4kh0GyNGUHnTqeH/w/qIsVn50dFxtp8otPL2t/HcPJBbxUA== dependencies: minimatch \"^5.1.0\" ", "completion": "Change test.rsa.js not to use key file "}
{"prompt": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 1da02c943..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -39,8 +39,8 @@ jobs: - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} - # Latest commit on the master branch, as of Oct 26, 2022. - - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1ec335da79eaa8341308acd9dc804078b8593c84\"}} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: ", "completion": "Bump libc from 0.2.136 to 0.2.137 in /src/rust (#7746) Bumps [libc](https://github.com/rust-lang/libc) from 0.2.136 to 0.2.137. - [Release notes](https://github.com/rust-lang/libc/releases) - [Commits](https://github.com/rust-lang/libc/compare/0.2.136...0.2.137)  --- updated-dependencies: - dependency-name: libc dependency-type: indirect update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Signed-off-by: dependabot[bot] <support@github.com> Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 1da02c943..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -39,8 +39,8 @@ jobs: - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} - # Latest commit on the master branch, as of Oct 26, 2022. - - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1ec335da79eaa8341308acd9dc804078b8593c84\"}} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 4aeef93b1..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.136\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"55edcf6c0bb319052dea84732cf99db461780fd5e8d3eb46ab6ff312ab31f197\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" ", "completion": "Update CI for py3.11 release (#7743) CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Update CI for py3.11 release  CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Don't use a name that's an existing enum method "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f07b8320d..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 26, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1ec335da79eaa8341308acd9dc804078b8593c84\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 4aeef93b1..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.136\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"55edcf6c0bb319052dea84732cf99db461780fd5e8d3eb46ab6ff312ab31f197\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Silence a new clippy warning that requires a high MSRV (#7742) CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Silence a new clippy warning that requires a high MSRV  CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Update lib.rs  CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Update twisted.sh  CHANGELOG.rst CONTRIBUTING.rst LICENSE LICENSE.APACHE LICENSE.BSD LICENSE.PSF MANIFEST.in README.rst dev-requirements.txt docs pyproject.toml release.py setup.cfg setup.py src tests tox.ini vectors Update twisted.sh "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f07b8320d..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 26, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1ec335da79eaa8341308acd9dc804078b8593c84\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 4aeef93b1..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.136\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"55edcf6c0bb319052dea84732cf99db461780fd5e8d3eb46ab6ff312ab31f197\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump BoringSSL version to 1ec335da79eaa8341308acd9dc804078b8593c84 (#7744) Co-authored-by: BoringSSL Bot <pyca-boringbot@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f0d237368..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 23, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"671ccb1a98fae26bf9c115068b2993418cecc800\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 4aeef93b1..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.136\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"55edcf6c0bb319052dea84732cf99db461780fd5e8d3eb46ab6ff312ab31f197\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump libc from 0.2.135 to 0.2.136 in /src/rust (#7741) Bumps [libc](https://github.com/rust-lang/libc) from 0.2.135 to 0.2.136. - [Release notes](https://github.com/rust-lang/libc/releases) - [Commits](https://github.com/rust-lang/libc/compare/0.2.135...0.2.136)  --- updated-dependencies: - dependency-name: libc dependency-type: indirect update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Signed-off-by: dependabot[bot] <support@github.com> Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f0d237368..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 23, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"671ccb1a98fae26bf9c115068b2993418cecc800\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index de3297b14..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "remove memleak tests that no longer exercise openssl code (#7740) tests that _create_ x509 structures are left, since they at least exercise signing code "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f0d237368..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 23, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"671ccb1a98fae26bf9c115068b2993418cecc800\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index de3297b14..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index b1df39e27..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -269,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "In memleak test, track reallocs of startup pointers (#7379) (#7739) The conda-forge build of this package was encountering test failures because their Windows build configuration involves a situation where some of the tests cause a realloc of memory in the memleak test's `start_heap`. Here we allow such reallocs and do not count them as leaks if they do not add too much memory usage, where \"too much\" is currently defined as 1024 bytes.  refs #7379 "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index f0d237368..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 23, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"671ccb1a98fae26bf9c115068b2993418cecc800\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index de3297b14..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump BoringSSL version to 671ccb1a98fae26bf9c115068b2993418cecc800 (#7738) Co-authored-by: BoringSSL Bot <pyca-boringbot@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index de3297b14..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump cxx from 1.0.79 to 1.0.80 in /src/rust (#7737) Bumps [cxx](https://github.com/dtolnay/cxx) from 1.0.79 to 1.0.80. - [Release notes](https://github.com/dtolnay/cxx/releases) - [Commits](https://github.com/dtolnay/cxx/compare/1.0.79...1.0.80)  --- updated-dependencies: - dependency-name: cxx dependency-type: indirect update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Signed-off-by: dependabot[bot] <support@github.com> Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index a5ca1a2cc..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump base64 from 0.13.0 to 0.13.1 in /src/rust (#7736) Bumps [base64](https://github.com/marshallpierce/rust-base64) from 0.13.0 to 0.13.1. - [Release notes](https://github.com/marshallpierce/rust-base64/releases) - [Changelog](https://github.com/marshallpierce/rust-base64/blob/master/RELEASE-NOTES.md) - [Commits](https://github.com/marshallpierce/rust-base64/compare/v0.13.0...v0.13.1)  --- updated-dependencies: - dependency-name: base64 dependency-type: indirect update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Signed-off-by: dependabot[bot] <support@github.com> Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 57f355e41..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -52,9 +52,9 @@ checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\" [[package]] name = \"base64\" -version = \"0.13.0\" +version = \"0.13.1\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\" +checksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\" [[package]] name = \"bitflags\" @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Bump cxx-build from 1.0.79 to 1.0.80 in /src/rust (#7735) Bumps [cxx-build](https://github.com/dtolnay/cxx) from 1.0.79 to 1.0.80. - [Release notes](https://github.com/dtolnay/cxx/releases) - [Commits](https://github.com/dtolnay/cxx/compare/1.0.79...1.0.80)  --- updated-dependencies: - dependency-name: cxx-build dependency-type: indirect update-type: version-update:semver-patch ...  Signed-off-by: dependabot[bot] <support@github.com>  Signed-off-by: dependabot[bot] <support@github.com> Co-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com> "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 44e381061..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -52,9 +52,9 @@ checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\" [[package]] name = \"base64\" -version = \"0.13.0\" +version = \"0.13.1\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\" +checksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\" [[package]] name = \"bitflags\" @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -134,9 +134,9 @@ dependencies = [ [[package]] name = \"cxx-build\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"07d050484b55975889284352b0ffc2ecbda25c0c55978017c132b29ba0818a86\" +checksum = \"84f8829ddc213e2c1368e51a2564c552b65a8cb6a28f31e576270ac81d5e5827\" dependencies = [ \"cc\", \"codespan-reporting\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Expose some CSR attributes details for other modules (#7730) refs #7729 "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 44e381061..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -52,9 +52,9 @@ checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\" [[package]] name = \"base64\" -version = \"0.13.0\" +version = \"0.13.1\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\" +checksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\" [[package]] name = \"bitflags\" @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -134,9 +134,9 @@ dependencies = [ [[package]] name = \"cxx-build\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"07d050484b55975889284352b0ffc2ecbda25c0c55978017c132b29ba0818a86\" +checksum = \"84f8829ddc213e2c1368e51a2564c552b65a8cb6a28f31e576270ac81d5e5827\" dependencies = [ \"cc\", \"codespan-reporting\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/src/rust/src/x509/csr.rs b/src/rust/src/x509/csr.rs index 280176b95..7bc3dc98a 100644 --- a/src/rust/src/x509/csr.rs +++ b/src/rust/src/x509/csr.rs @@ -22,17 +22,19 @@ struct CertificationRequestInfo<'a> { subject: x509::Name<'a>, spki: certificate::SubjectPublicKeyInfo<'a>, #[implicit(0, required)] - attributes: x509::Asn1ReadableOrWritable< - 'a, - asn1::SetOf<'a, Attribute<'a>>, - asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, - >, + attributes: Attributes<'a>, } +pub(crate) type Attributes<'a> = x509::Asn1ReadableOrWritable< + 'a, + asn1::SetOf<'a, Attribute<'a>>, + asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, +>; + #[derive(asn1::Asn1Read, asn1::Asn1Write)] -struct Attribute<'a> { - type_id: asn1::ObjectIdentifier, - values: x509::Asn1ReadableOrWritable< +pub(crate) struct Attribute<'a> { + pub(crate) type_id: asn1::ObjectIdentifier, + pub(crate) values: x509::Asn1ReadableOrWritable< 'a, asn1::SetOf<'a, asn1::Tlv<'a>>, asn1::SetOfWriter<'a, x509::common::RawTlv<'a>, [x509::common::RawTlv<'a>; 1]>, diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "expose time_from_chrono refs (#7731) refs #7729 "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 44e381061..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -52,9 +52,9 @@ checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\" [[package]] name = \"base64\" -version = \"0.13.0\" +version = \"0.13.1\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\" +checksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\" [[package]] name = \"bitflags\" @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -134,9 +134,9 @@ dependencies = [ [[package]] name = \"cxx-build\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"07d050484b55975889284352b0ffc2ecbda25c0c55978017c132b29ba0818a86\" +checksum = \"84f8829ddc213e2c1368e51a2564c552b65a8cb6a28f31e576270ac81d5e5827\" dependencies = [ \"cc\", \"codespan-reporting\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/src/rust/src/x509/certificate.rs b/src/rust/src/x509/certificate.rs index a70a9c780..e2879b947 100644 --- a/src/rust/src/x509/certificate.rs +++ b/src/rust/src/x509/certificate.rs @@ -936,6 +936,10 @@ pub fn parse_cert_ext<'p>( pub(crate) fn time_from_py(py: pyo3::Python<'_>, val: &pyo3::PyAny) -> PyAsn1Result<x509::Time> { let dt = x509::py_to_chrono(py, val)?; + time_from_chrono(dt) +} + +pub(crate) fn time_from_chrono(dt: chrono::DateTime<chrono::Utc>) -> PyAsn1Result<x509::Time> { if dt.year() >= 2050 { Ok(x509::Time::GeneralizedTime(asn1::GeneralizedTime::new(dt)?)) } else { diff --git a/src/rust/src/x509/csr.rs b/src/rust/src/x509/csr.rs index 280176b95..7bc3dc98a 100644 --- a/src/rust/src/x509/csr.rs +++ b/src/rust/src/x509/csr.rs @@ -22,17 +22,19 @@ struct CertificationRequestInfo<'a> { subject: x509::Name<'a>, spki: certificate::SubjectPublicKeyInfo<'a>, #[implicit(0, required)] - attributes: x509::Asn1ReadableOrWritable< - 'a, - asn1::SetOf<'a, Attribute<'a>>, - asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, - >, + attributes: Attributes<'a>, } +pub(crate) type Attributes<'a> = x509::Asn1ReadableOrWritable< + 'a, + asn1::SetOf<'a, Attribute<'a>>, + asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, +>; + #[derive(asn1::Asn1Read, asn1::Asn1Write)] -struct Attribute<'a> { - type_id: asn1::ObjectIdentifier, - values: x509::Asn1ReadableOrWritable< +pub(crate) struct Attribute<'a> { + pub(crate) type_id: asn1::ObjectIdentifier, + pub(crate) values: x509::Asn1ReadableOrWritable< 'a, asn1::SetOf<'a, asn1::Tlv<'a>>, asn1::SetOfWriter<'a, x509::common::RawTlv<'a>, [x509::common::RawTlv<'a>; 1]>, diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "expose two x509 submodules (#7732) refs #7729 "}
{"prompt": "diff --git a/.github/workflows/benchmark.yml b/.github/workflows/benchmark.yml index 9ea619b66..d2f482505 100644 --- a/.github/workflows/benchmark.yml +++ b/.github/workflows/benchmark.yml @@ -30,7 +30,7 @@ jobs: id: setup-python uses: actions/setup-python@v4.3.0 with: - python-version: \"3.10\" + python-version: \"3.11\" - name: Create virtualenv (main) run: | diff --git a/.github/workflows/ci.yml b/.github/workflows/ci.yml index 09e8bddfa..214b39a50 100644 --- a/.github/workflows/ci.yml +++ b/.github/workflows/ci.yml @@ -23,25 +23,24 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"flake\"} - - {VERSION: \"3.10\", TOXENV: \"rust\"} - - {VERSION: \"3.10\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"flake\"} + - {VERSION: \"3.11\", TOXENV: \"rust\"} + - {VERSION: \"3.11\", TOXENV: \"docs\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - {VERSION: \"pypy-3.7\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.8\", TOXENV: \"pypy3-nocoverage\"} - {VERSION: \"pypy-3.9\", TOXENV: \"pypy3-nocoverage\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} - - {VERSION: \"3.11-dev\", TOXENV: \"py311\"} - - {VERSION: \"3.10\", TOXENV: \"py310-randomorder\"} - # Latest commit on the master branch, as of Oct 19, 2022. - - {VERSION: \"3.10\", TOXENV: \"py310\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"b819f7e9392d25db6705a6bd3c92be3bb91775e2\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-ssh\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"1.1.1q\", CONFIG_FLAGS: \"no-engine no-rc2 no-srtp no-ct no-psk\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"openssl\", VERSION: \"3.0.5\", CONFIG_FLAGS: \"no-legacy\", NO_LEGACY: \"1\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", TOXARGS: \"--enable-fips=1\", OPENSSL: {TYPE: \"openssl\", CONFIG_FLAGS: \"enable-fips\", VERSION: \"3.0.5\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.4.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.5.3\"}} + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"libressl\", VERSION: \"3.6.0\"}} + - {VERSION: \"3.11\", TOXENV: \"py311-randomorder\"} + # Latest commit on the master branch, as of Oct 27, 2022. + - {VERSION: \"3.11\", TOXENV: \"py311\", OPENSSL: {TYPE: \"boringssl\", VERSION: \"1e0f0423dd5f1a279bd09bac62e989dd438edd7b\"}} name: \"${{ matrix.PYTHON.TOXENV }} ${{ matrix.PYTHON.OPENSSL.TYPE }} ${{ matrix.PYTHON.OPENSSL.VERSION }} ${{ matrix.PYTHON.TOXARGS }} ${{ matrix.PYTHON.OPENSSL.CONFIG_FLAGS }}\" timeout-minutes: 15 steps: @@ -188,7 +187,7 @@ jobs: fail-fast: false matrix: PYTHON: - - {VERSION: \"3.9\", TOXENV: \"py39\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: # Cover MSRV (and likely next MSRV). In-dev versions are below in # the linux-rust-coverage section. Once our MSRV is 1.60 we can @@ -246,7 +245,7 @@ jobs: strategy: matrix: PYTHON: - - {VERSION: \"3.10\", TOXENV: \"py310\"} + - {VERSION: \"3.11\", TOXENV: \"py311\"} RUST: - beta - nightly @@ -398,7 +397,7 @@ jobs: - {ARCH: 'x64', WINDOWS: 'win64'} PYTHON: - {VERSION: \"3.6\", TOXENV: \"py36-nocoverage\", CL_FLAGS: \"\"} - - {VERSION: \"3.10\", TOXENV: \"py310\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} + - {VERSION: \"3.11\", TOXENV: \"py311\", CL_FLAGS: \"/D USE_OSRANDOM_RNG_FOR_TESTING\"} JOB_NUMBER: [0, 1, 2] name: \"${{ matrix.PYTHON.TOXENV }} on ${{ matrix.WINDOWS.WINDOWS }} (part ${{ matrix.JOB_NUMBER }})\" timeout-minutes: 15 @@ -527,7 +526,7 @@ jobs: - name: Setup python uses: actions/setup-python@v4.3.0 with: - python-version: 3.9 + python-version: 3.11 - run: python -m pip install -U tox - run: tox -r -- --color=yes env: diff --git a/setup.cfg b/setup.cfg index 724b86e65..d42e78930 100644 --- a/setup.cfg +++ b/setup.cfg @@ -32,6 +32,7 @@ classifiers = Programming Language :: Python :: 3.8 Programming Language :: Python :: 3.9 Programming Language :: Python :: 3.10 + Programming Language :: Python :: 3.11 Programming Language :: Python :: Implementation :: CPython Programming Language :: Python :: Implementation :: PyPy Topic :: Security :: Cryptography diff --git a/src/rust/Cargo.lock b/src/rust/Cargo.lock index 44e381061..e180a6e5c 100644 --- a/src/rust/Cargo.lock +++ b/src/rust/Cargo.lock @@ -52,9 +52,9 @@ checksum = \"d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa\" [[package]] name = \"base64\" -version = \"0.13.0\" +version = \"0.13.1\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"904dfeac50f3cdaba28fc6f57fdcddb75f49ed61346676a78c4ffe55877802fd\" +checksum = \"9e1b586273c5702936fe7b7d6896644d8be71e6314cfe09d3167c95f712589e8\" [[package]] name = \"bitflags\" @@ -122,9 +122,9 @@ dependencies = [ [[package]] name = \"cxx\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"3f83d0ebf42c6eafb8d7c52f7e5f2d3003b89c7aa4fd2b79229209459a849af8\" +checksum = \"6b7d4e43b25d3c994662706a1d4fcfc32aaa6afd287502c111b237093bb23f3a\" dependencies = [ \"cc\", \"cxxbridge-flags\", @@ -134,9 +134,9 @@ dependencies = [ [[package]] name = \"cxx-build\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"07d050484b55975889284352b0ffc2ecbda25c0c55978017c132b29ba0818a86\" +checksum = \"84f8829ddc213e2c1368e51a2564c552b65a8cb6a28f31e576270ac81d5e5827\" dependencies = [ \"cc\", \"codespan-reporting\", @@ -149,15 +149,15 @@ dependencies = [ [[package]] name = \"cxxbridge-flags\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"99d2199b00553eda8012dfec8d3b1c75fce747cf27c169a270b3b99e3448ab78\" +checksum = \"e72537424b474af1460806647c41d4b6d35d09ef7fe031c5c2fa5766047cc56a\" [[package]] name = \"cxxbridge-macro\" -version = \"1.0.79\" +version = \"1.0.80\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"dcb67a6de1f602736dd7eaead0080cf3435df806c61b24b13328db128c58868f\" +checksum = \"309e4fb93eed90e1e14bea0da16b209f81813ba9fc7830c20ed151dd7bc0a4d7\" dependencies = [ \"proc-macro2\", \"quote\", @@ -231,9 +231,9 @@ dependencies = [ [[package]] name = \"libc\" -version = \"0.2.135\" +version = \"0.2.137\" source = \"registry+https://github.com/rust-lang/crates.io-index\" -checksum = \"68783febc7782c6c5cb401fbda4de5a9898be1762314da0bb2c10ced61f18b0c\" +checksum = \"fc7fcc620a3bff7cdd7a365be3376c97191aeaccc2a603e600951e452615bf89\" [[package]] name = \"link-cplusplus\" diff --git a/src/rust/src/lib.rs b/src/rust/src/lib.rs index df4cf92e0..614680268 100644 --- a/src/rust/src/lib.rs +++ b/src/rust/src/lib.rs @@ -5,8 +5,11 @@ #![deny(rust_2018_idioms)] // Temporarily allow `clippy::borrow_deref_ref` until we can upgrade to the // latest pyo3: https://github.com/PyO3/pyo3/pull/2503 +// +// `clippy::uninlined_format_args` is required until our MSRV is >=1.58.0 +// // `unknown_lints` is required until GHA upgrades their rustc. -#![allow(unknown_lints, clippy::borrow_deref_ref)] +#![allow(unknown_lints, clippy::borrow_deref_ref, clippy::uninlined_format_args)] mod asn1; mod intern; diff --git a/src/rust/src/x509/certificate.rs b/src/rust/src/x509/certificate.rs index a70a9c780..e2879b947 100644 --- a/src/rust/src/x509/certificate.rs +++ b/src/rust/src/x509/certificate.rs @@ -936,6 +936,10 @@ pub fn parse_cert_ext<'p>( pub(crate) fn time_from_py(py: pyo3::Python<'_>, val: &pyo3::PyAny) -> PyAsn1Result<x509::Time> { let dt = x509::py_to_chrono(py, val)?; + time_from_chrono(dt) +} + +pub(crate) fn time_from_chrono(dt: chrono::DateTime<chrono::Utc>) -> PyAsn1Result<x509::Time> { if dt.year() >= 2050 { Ok(x509::Time::GeneralizedTime(asn1::GeneralizedTime::new(dt)?)) } else { diff --git a/src/rust/src/x509/csr.rs b/src/rust/src/x509/csr.rs index 280176b95..7bc3dc98a 100644 --- a/src/rust/src/x509/csr.rs +++ b/src/rust/src/x509/csr.rs @@ -22,17 +22,19 @@ struct CertificationRequestInfo<'a> { subject: x509::Name<'a>, spki: certificate::SubjectPublicKeyInfo<'a>, #[implicit(0, required)] - attributes: x509::Asn1ReadableOrWritable< - 'a, - asn1::SetOf<'a, Attribute<'a>>, - asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, - >, + attributes: Attributes<'a>, } +pub(crate) type Attributes<'a> = x509::Asn1ReadableOrWritable< + 'a, + asn1::SetOf<'a, Attribute<'a>>, + asn1::SetOfWriter<'a, Attribute<'a>, Vec<Attribute<'a>>>, +>; + #[derive(asn1::Asn1Read, asn1::Asn1Write)] -struct Attribute<'a> { - type_id: asn1::ObjectIdentifier, - values: x509::Asn1ReadableOrWritable< +pub(crate) struct Attribute<'a> { + pub(crate) type_id: asn1::ObjectIdentifier, + pub(crate) values: x509::Asn1ReadableOrWritable< 'a, asn1::SetOf<'a, asn1::Tlv<'a>>, asn1::SetOfWriter<'a, x509::common::RawTlv<'a>, [x509::common::RawTlv<'a>; 1]>, diff --git a/src/rust/src/x509/mod.rs b/src/rust/src/x509/mod.rs index ee6c8d74c..8c7b39f4b 100644 --- a/src/rust/src/x509/mod.rs +++ b/src/rust/src/x509/mod.rs @@ -7,10 +7,10 @@ pub(crate) mod common; pub(crate) mod crl; pub(crate) mod csr; pub(crate) mod extensions; -mod ocsp; +pub(crate) mod ocsp; pub(crate) mod ocsp_req; pub(crate) mod ocsp_resp; -mod oid; +pub(crate) mod oid; pub(crate) mod sct; pub(crate) mod sign; diff --git a/tests/hazmat/backends/test_openssl_memleak.py b/tests/hazmat/backends/test_openssl_memleak.py index 2605566bd..6d27012f6 100644 --- a/tests/hazmat/backends/test_openssl_memleak.py +++ b/tests/hazmat/backends/test_openssl_memleak.py @@ -27,6 +27,8 @@ def main(argv): from cryptography.hazmat.bindings._openssl import ffi, lib heap = {} + start_heap = {} + start_heap_realloc_delta = [0] # 1-item list so callbacks can mutate it BACKTRACE_ENABLED = False if BACKTRACE_ENABLED: @@ -70,6 +72,20 @@ def main(argv): del heap[ptr] new_ptr = lib.Cryptography_realloc_wrapper(ptr, size, path, line) heap[new_ptr] = (size, path, line, backtrace()) + + # It is possible that something during the test will cause a + # realloc of memory allocated during the startup phase. (This + # was observed in conda-forge Windows builds of this package with + # provider operation_bits pointers in crypto/provider_core.c.) If + # we don't pay attention to that, the realloc'ed pointer will show + # up as a leak; but we also don't want to allow this kind of realloc + # to consume large amounts of additional memory. So we track the + # realloc and the change in memory consumption. + startup_info = start_heap.pop(ptr, None) + if startup_info is not None: + start_heap[new_ptr] = heap[new_ptr] + start_heap_realloc_delta[0] += size - startup_info[0] + return new_ptr @ffi.callback(\"void(void *, const char *, int)\") @@ -87,7 +103,7 @@ def main(argv): hashlib.sha256() - start_heap = set(heap) + start_heap.update(heap) try: func(*argv[1:]) @@ -113,10 +129,12 @@ def main(argv): ) assert result == 1 - remaining = set(heap) - start_heap + remaining = set(heap) - set(start_heap) - if remaining: - sys.stdout.write(json.dumps(dict( + # The constant here is the number of additional bytes of memory + # consumption that are allowed in reallocs of start_heap memory. + if remaining or start_heap_realloc_delta[0] > 1024: + info = dict( (int(ffi.cast(\"size_t\", ptr)), { \"size\": heap[ptr][0], \"path\": ffi.string(heap[ptr][1]).decode(), @@ -124,7 +142,9 @@ def main(argv): \"backtrace\": symbolize_backtrace(heap[ptr][3]), }) for ptr in remaining - ))) + ) + info[\"start_heap_realloc_delta\"] = start_heap_realloc_delta[0] + sys.stdout.write(json.dumps(info)) sys.stdout.flush() sys.exit(255) @@ -249,52 +269,6 @@ class TestAssertNoMemoryLeaks: @pytest.mark.skip_fips(reason=\"FIPS self-test sets allow_customize = 0\") @skip_if_memtesting_not_supported() class TestOpenSSLMemoryLeaks: - @pytest.mark.parametrize( - \"path\", [\"x509/PKITS_data/certs/ValidcRLIssuerTest28EE.crt\"] - ) - def test_der_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_der_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - - @pytest.mark.parametrize(\"path\", [\"x509/cryptography.io.pem\"]) - def test_pem_x509_certificate_extensions(self, path): - assert_no_memory_leaks( - textwrap.dedent( - \"\"\" - def func(path): - from cryptography import x509 - from cryptography.hazmat.backends.openssl import backend - - import cryptography_vectors - - with cryptography_vectors.open_vector_file(path, \"rb\") as f: - cert = x509.load_pem_x509_certificate( - f.read(), backend - ) - - cert.extensions - \"\"\" - ), - [path], - ) - def test_x509_csr_extensions(self): assert_no_memory_leaks( textwrap.dedent( diff --git a/tests/test_cryptography_utils.py b/tests/test_cryptography_utils.py index 065da7b2d..98fd6165a 100644 --- a/tests/test_cryptography_utils.py +++ b/tests/test_cryptography_utils.py @@ -56,9 +56,9 @@ class TestCachedProperty: def test_enum(): class TestEnum(utils.Enum): - value = \"something\" + something = \"something\" assert issubclass(TestEnum, enum.Enum) - assert isinstance(TestEnum.value, enum.Enum) - assert repr(TestEnum.value) == \"<TestEnum.value: 'something'>\" - assert str(TestEnum.value) == \"TestEnum.value\" + assert isinstance(TestEnum.something, enum.Enum) + assert repr(TestEnum.something) == \"<TestEnum.something: 'something'>\" + assert str(TestEnum.something) == \"TestEnum.something\" ", "completion": "Remove SHA1 signatures support from PKCS7 (#7734) "}
